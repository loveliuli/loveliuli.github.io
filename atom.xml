<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Time Memory]]></title>
  <subtitle><![CDATA[Where there is a will, there is way。]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://loveliuli.com/"/>
  <updated>2014-12-09T03:03:26.658Z</updated>
  <id>http://loveliuli.com/</id>
  
  <author>
    <name><![CDATA[Copyright By Qun.Xue  版权所有]]></name>
    <email><![CDATA[505711559@qq.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Zabbix远程执行命令]]></title>
    <link href="http://loveliuli.com/2014/08/14/monitor/monitor_06/"/>
    <id>http://loveliuli.com/2014/08/14/monitor/monitor_06/</id>
    <published>2014-08-14T05:09:12.000Z</published>
    <updated>2014-08-14T03:37:18.000Z</updated>
    <content type="html"><![CDATA[<p>本文主要讲述Zabbix远程执行命令.<a id="more"></a></p>
<p>本教程是测试zabbix的远程执行功能,比较简单,点拨思路,自己发散.</p>
<h3 id="一-创建item和触发器">一.创建item和触发器</h3>
<p>1.1 创建item<br>我这里是测试服务irqbalance,当服务irqbalance停止后,zabbix触发后,会自动拉起irqbalance服务.<br>Item:<br>UserParameter=xsj.irq.sum,ps xua|grep -w  “irqbalance”|grep -v grep|wc -l<br>1.2 创建触发器:</p>
<p><img src="http://ww1.sinaimg.cn/large/b7ec873bgw1ejbzxgcgeoj20pa0dl75a.jpg" alt="创建触发器"></p>
<h3 id="二-创建脚本或者命令">二.创建脚本或者命令</h3>
<p>2.1 如果你使用脚本,需要提前写好脚本,记得chmod755以及chow zabbix.命令的话,直接使用sudo执行.考虑到安全问题,这里的sudo控制最好细化.<br>2.2 本例使用sudo /etc/init.d/irqbalance start来进行测试</p>
<h3 id="三-开启sudo权限">三.开启sudo权限</h3>
<p>下例是授权zabbix无密码允许netstat命令:<br><strong>授权zabbix用户无密码运行netstat命令</strong></p>
<pre><code><span class="keyword">chmod</span> +w /etc/sudoers 
sed -i <span class="string">'s/^\(Defaults\s\+requiretty\)/#\1/'</span> /etc/sudoers
<span class="keyword">grep</span> -<span class="keyword">q</span> <span class="string">'^zabbix ALL=(ALL).*netstat'</span> /etc/sudoers || echo <span class="string">'zabbix ALL=(ALL)       NOPASSWD: /bin/netstat'</span> &gt;&gt; <span class="regexp">/etc/sudoers</span>
<span class="keyword">chmod</span> <span class="number">440</span> /etc/sudoers
</code></pre><p>我们只是使用irqbalance 服务来测试,所以比较简单,visudo最后添加一行:</p>
<pre><code>zabbix <span class="keyword">ALL</span>=(<span class="keyword">ALL</span>)       NOPASSWD: /etc/init.d/irqbalance start
</code></pre><h3 id="四-创建action">四.创建action</h3>
<p><img src="http://ww2.sinaimg.cn/large/b7ec873bgw1ejc029sm4rj20uy0argnh.jpg" alt="创建action"></p>
<p><img src="http://ww1.sinaimg.cn/large/b7ec873bgw1ejc045a5crj20uu0lf41z.jpg" alt="创建action"></p>
<h3 id="五-测试">五.测试</h3>
<p>测试过程:关闭irqbalance服务,web界面查看告警以及命令执行情况.<br><strong>注意事项</strong>:<br>1.On some systems sudoers file will prevent non-local users from executing commands. To change this, comment out <strong>requiretty</strong> option in /etc/sudoers.<br>2.Make sure that the <strong>EnableRemoteCommands</strong> parameter is <strong>set to 1</strong> and uncommented. Restart agent daemon if changing this parameter.</p>
]]></content>
    <summary type="html"><![CDATA[<p>本文主要讲述Zabbix远程执行命令.]]></summary>
    
      <category term="monitor" scheme="http://loveliuli.com/tags/monitor/"/>
    
      <category term="监控" scheme="http://loveliuli.com/categories/%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Zabbix触发器函数学习]]></title>
    <link href="http://loveliuli.com/2014/08/08/monitor/monitor_05/"/>
    <id>http://loveliuli.com/2014/08/08/monitor/monitor_05/</id>
    <published>2014-08-08T05:09:12.000Z</published>
    <updated>2014-08-11T01:12:48.000Z</updated>
    <content type="html"><![CDATA[<p>本文主要讲述zabbix触发器函数.<a id="more"></a></p>
<h3 id="1-abschange">1.abschange</h3>
<pre><code>参数:缺省
值类型:float, <span class="keyword">int</span>, str, text, <span class="keyword">log</span>
返回值解析:    Returns absolute difference between <span class="keyword">last</span> <span class="keyword">and</span> previous <span class="keyword">values</span>.
            For strings:
            <span class="number">0</span> - <span class="keyword">values</span> are equal
            <span class="number">1</span> - <span class="keyword">values</span> differ
<span class="string">`abschange函数`</span>
对于数字类型的处理方式:返回最后一个值和倒数第二个值的绝对不同,也就是返回一个正数
对于字符串类型的处理方式:返回<span class="number">0</span>说明值没变化,返回<span class="number">1</span>说明值有变化
</code></pre><h3 id="2-change">2.change</h3>
<pre><code>参数:缺省
值类型:float, <span class="keyword">int</span>, str, text, <span class="keyword">log</span>
返回值解析:    Returns difference between <span class="keyword">last</span> <span class="keyword">and</span> previous <span class="keyword">values</span>.
            For strings:
            <span class="number">0</span> - <span class="keyword">values</span> are equal
            <span class="number">1</span> - <span class="keyword">values</span> differ
<span class="string">`change函数`</span>
对于数字类型的处理方式:返回最后一个值和倒数第二个值的差,也就是返回一个数值,可正可负可为零
对于字符串类型的处理方式:返回<span class="number">0</span>说明值没变化,返回<span class="number">1</span>说明值有变化
</code></pre><h3 id="3-avg">3.avg</h3>
<pre><code>参数<span class="symbol">:sec</span> <span class="keyword">or</span> <span class="comment">#num</span>
值类型<span class="symbol">:float</span>, int
返回值解析<span class="symbol">:</span>
一段时间的平均值.这段时间可以设置为秒或者一个收集值的个数(前面用一个<span class="comment">#符号,例如:#5-最近5个值),这是第一个参数</span>
函数接收秒,也可以是一个时间段,当需要对比当前平均值和指定时间段的时候,非常有用.例如<span class="symbol">:avg</span>(<span class="number">3600</span>,<span class="number">86400</span>)将会返回一天前的一小时内的平均值.
参数 **时间段**从<span class="number">1.8</span>.<span class="number">2</span>开始支持.
</code></pre><h3 id="4-band">4.band</h3>
<pre><code>参数<span class="symbol">:sec</span> <span class="keyword">or</span> <span class="comment">#num</span>
值类型<span class="symbol">:int</span>
返回值解析<span class="symbol">:</span>
返回值 为一个监控项和一个掩码的按位与.
第一个参数为秒或者<span class="comment">#num</span>
第二个参数是掩码(强制性的)是一个<span class="number">64</span>位无符号整数.(<span class="number">0</span> - <span class="number">18446744073709551615</span>).
第三个参数是time_shift
这个函数从zabbix2.<span class="number">2.0</span>开始支持.
</code></pre><h3 id="5-count">5.count</h3>
<pre><code>参数:sec <span class="keyword">or</span> <span class="comment">#num</span>
值类型:float, <span class="keyword">int</span>, str, text, <span class="keyword">log</span>
返回值解析:
一段时间内采集值的个数.这段时间可以设置成秒或者一个数字(用<span class="comment">#前缀,表示多少个),这是第一个参数.</span>
函数接收第二个可选参数和第三个可选参数以及第四个time_shift参数.
对于样式:正数值-精确匹配;浮点值-匹配到<span class="number">0</span>.<span class="number">000001</span>
支持操作符:
eq-等于
<span class="keyword">ne</span>-不等于
<span class="keyword">gt</span>-大于
ge-大于等于
<span class="keyword">lt</span>-小于
le-小于等于
like-包含
band-按位与. 这个函数从zabbix2.<span class="number">2.0</span>开始支持.
如果有band参数,则第二个参数为分数形式,比较值/掩码
如果按位与的结果等于被比较数,则值被计数一次,如果被计较值和掩码相等,只需要指定掩码,无需/.
对于整形监控项:操作符e<span class="string">q(默认)</span>,<span class="keyword">ne</span>, <span class="keyword">gt</span>, ge, <span class="keyword">lt</span>, le, band 均被支持.
对于浮点型监控项:操作符e<span class="string">q(默认)</span>,<span class="keyword">ne</span>, <span class="keyword">gt</span>, ge, <span class="keyword">lt</span>, le, band 均被支持.
对于字符串,文本和<span class="keyword">log</span>监控项:操作符like(默认的),eq,<span class="keyword">ne</span>均被支持.
例子:
count(<span class="number">600</span>) -最近十分钟值的个数.
count(<span class="number">600</span>,<span class="number">12</span>) - 最近十分钟的值为<span class="number">12</span>的个数.
count(<span class="number">600</span>,<span class="number">12</span>,<span class="string">"gt"</span>) - 最近十分钟的值大于<span class="number">12</span>的个数.
count(<span class="comment">#10,12,"gt") - 最近10个值大于12的个数.</span>
count(<span class="number">600</span>,<span class="number">12</span>,<span class="string">"gt"</span>,<span class="number">86400</span>) - 一天前最近十分钟的值大于<span class="number">12</span>的个数.
count(<span class="number">600</span>,<span class="number">6</span>/<span class="number">7</span>,<span class="string">"band"</span>) - 最近十分钟监控项有二进制有<span class="number">110</span>的个数.
count(<span class="number">600</span>,,,<span class="number">86400</span>) - 一天前最近十分钟值的个数.
<span class="comment">#num 参数从Zabbix 1.6.1开始支持.</span>
time_shift 参数从zabbix1.<span class="number">8.2</span>开始支持.
</code></pre><h3 id="6-date">6.date</h3>
<pre><code>参数:缺省
值类型<span class="pseudo">:any</span>
返回值解析:
返回当前日期,以<span class="tag">YYYYMMDD</span>格式.例如<span class="pseudo">:20031025</span>
</code></pre><h3 id="7-dayofmonth">7.dayofmonth</h3>
<pre><code>参数<span class="symbol">:</span>缺省
值类型<span class="symbol">:any</span>
返回值解析<span class="symbol">:</span>
返回一个月(<span class="number">1</span>~<span class="number">31</span>)中的天.这个函数从<span class="number">1.8</span>.<span class="number">5</span>开始支持.
</code></pre><h3 id="8-dayofweek">8.dayofweek</h3>
<pre><code>参数<span class="symbol">:</span>缺省
值类型<span class="symbol">:any</span>
返回值解析<span class="symbol">:</span>
返回一周中的某一天.例如<span class="symbol">:Mon-</span><span class="number">1</span> ,sun-<span class="number">7</span>
</code></pre><h3 id="9-delta">9.delta</h3>
<pre><code>参数<span class="symbol">:sec</span> <span class="keyword">or</span> <span class="comment">#num</span>
值类型<span class="symbol">:float</span>, int
返回值解析<span class="symbol">:</span>
返回一段时间内最大值和最小值的不同.可以通过设置第一个参数为秒和<span class="comment">#.</span>
从<span class="number">1.8</span>.<span class="number">2</span>版本起,支持秒和可选的time_shift参数.例子参考avg()函数.
</code></pre><h3 id="10-diff">10.diff</h3>
<pre><code>参数:缺省
值类型:<span class="keyword">float</span>, <span class="keyword">int</span>, <span class="keyword">str</span>, text, <span class="keyword">log</span>
返回值解析:
<span class="number">1</span>-最后一个和倒数第二个值不同
<span class="number">0</span>-相反
</code></pre><h3 id="11-fuzzytime">11.fuzzytime</h3>
<pre><code>参数:sec
值类型:float, <span class="keyword">int</span>
返回值解析:
返回值为<span class="number">1</span>,如果和zabbix <span class="keyword">server</span>的时间戳相差N秒,否则为<span class="number">0</span>
痛楚使用system.localtime来监测本地时间是否与zabbix <span class="keyword">server</span>同步
</code></pre><h3 id="12-iregexp">12.iregexp</h3>
<pre><code>参数:<span class="number">1</span>st - <span class="keyword">string</span>, <span class="number">2</span>nd - <span class="built_in">sec</span> <span class="operator">or</span> <span class="comment">#num</span>
值类型:str, <span class="built_in">log</span>, <span class="keyword">text</span>
返回值解析:
本函数是对于大小写不敏感的正则表达式.
</code></pre><h3 id="13-last">13.last</h3>
<pre><code>参数:<span class="built_in">sec</span> <span class="operator">or</span> <span class="comment">#num</span>
值类型:float, int, str, <span class="keyword">text</span>, <span class="built_in">log</span>
返回值解析:
最近最新的值,参数:
<span class="built_in">sec</span>-忽略
<span class="comment">#num-最近的N个值</span>
例如:
<span class="keyword">last</span>(<span class="number">0</span>)也等于<span class="keyword">last</span>(<span class="comment">#1)</span>
<span class="keyword">last</span>(<span class="comment">#3)-最近的第三个值</span>
<span class="keyword">last</span>也支持time_shift参数,例如:<span class="keyword">last</span>(<span class="number">0</span>,<span class="number">86400</span>)将返回一天前的最近值.
zabbix不能保证值的精确顺序,如果在历史记录里面一秒钟存在两个值的话.
参数<span class="comment">#num从zabbix1.6.2开始支持.</span>
参数time_shift从zabbix1<span class="number">.8</span><span class="number">.2</span>开始支持.
</code></pre><h3 id="15-logseverity">15.logseverity</h3>
<pre><code>参数:缺省
值类型:<span class="built_in">log</span>
返回值解析:
返回最后获得的<span class="built_in">log</span>条目的级别,参数缺省.
<span class="number">0</span>- 默认级别
N-级别(整数,对于windows时间<span class="built_in">log</span>有用:<span class="number">1</span> - Information, <span class="number">2</span> - Warning, <span class="number">4</span> - <span class="keyword">Error</span>, <span class="number">7</span> - Failure Audit, <span class="number">8</span> - Success Audit, <span class="number">9</span> - Critical, <span class="number">10</span> - Verbose)
Zabbix 采集<span class="built_in">log</span>级别从windows的日志系统.
</code></pre><h3 id="16-logsource">16.logsource</h3>
<pre><code>参数:<span class="keyword">string</span>
值类型:<span class="built_in">log</span>
返回值解析:
检查最新的<span class="built_in">log</span>条目是否和参数匹配.
<span class="number">0</span>-不匹配
<span class="number">1</span>-匹配
一般针对于windows事件<span class="built_in">log</span>.例如: logsource(<span class="string">"VMware Server"</span>).
</code></pre><h3 id="17-max">17.max</h3>
<pre><code>参数<span class="symbol">:sec</span> <span class="keyword">or</span> <span class="comment">#num</span>
值类型<span class="symbol">:float</span>,int
返回值解析<span class="symbol">:</span>
一段时间的最大值.这段时间可以设置为秒或者一个收集值的个数(前面用一个<span class="comment">#符号,例如:#5-最近5个值),这是第一个参数</span>
从zabbix1.<span class="number">8.2</span>开始支持秒,可选参数time_shift.
</code></pre><h3 id="18-min">18.min</h3>
<pre><code>参数<span class="symbol">:sec</span> <span class="keyword">or</span> <span class="comment">#num</span>
值类型<span class="symbol">:float</span>,int
返回值解析<span class="symbol">:</span>
一段时间的最小值.这段时间可以设置为秒或者一个收集值的个数(前面用一个<span class="comment">#符号,例如:#5-最近5个值),这是第一个参数</span>
从zabbix1.<span class="number">8.2</span>开始支持秒,可选参数time_shift.
</code></pre><h3 id="19-nodata">19.nodata</h3>
<pre><code>参数:<span class="built_in">sec</span> 
值类型: <span class="keyword">any</span>
返回值解析:
返回值<span class="number">1</span>-如果一段时间没有接收到数据,时间段不应该少于<span class="number">30</span>s
返回值<span class="number">0</span>-相反
</code></pre><h3 id="20-now">20.now</h3>
<pre><code>参数:缺省
值类型<span class="pseudo">:any</span>
返回值解析:
返回自从1970年1月1日00<span class="pseudo">:00</span><span class="pseudo">:00</span>来的秒数.
</code></pre><h3 id="21-prev">21.prev</h3>
<pre><code>参数:缺省
值类型:<span class="keyword">float</span>, <span class="keyword">int</span>, <span class="keyword">str</span>, text, <span class="keyword">log</span>
返回值解析:
返回历史值,参数缺省.
类似last(#<span class="number">2</span>)
</code></pre><h3 id="22-regexp">22.regexp</h3>
<pre><code>参数:<span class="number">1</span>st - <span class="keyword">string</span>, <span class="number">2</span>nd - <span class="built_in">sec</span> <span class="operator">or</span> <span class="comment">#num</span>
值类型: str, <span class="keyword">text</span>, <span class="built_in">log</span>
返回值解析:
检查最新值是否匹配正则表达式.参数为正则表达式,POSIX扩展格式.
第二个可选参数是用来采集数据的秒数或者收集值的数量.这样的情况下,将有一个以上的值被处理.
这个函数大小写敏感.
返回值为<span class="number">0</span>:发现有匹配的
返回值为<span class="number">1</span>:没有发现匹配的
</code></pre><h3 id="23-str">23.str</h3>
<pre><code>参数:<span class="number">1</span>st - <span class="keyword">string</span>, <span class="number">2</span>nd - <span class="built_in">sec</span> <span class="operator">or</span> <span class="comment">#num</span>
值类型:str, <span class="keyword">text</span>, <span class="built_in">log</span>
返回值解析:
发现最新值中的字符串,参数为定义被发现的字符串,大小写敏感.
第二个可选参数是用来采集数据的秒数或者收集值的数量.这样的情况下,将有一个以上的值被处理.
返回值为<span class="number">0</span>:发现有匹配的
返回值为<span class="number">1</span>:没有发现匹配的
</code></pre><h3 id="24-strlen">24.strlen</h3>
<pre><code>参数:<span class="built_in">sec</span> <span class="operator">or</span> <span class="comment">#num</span>
值类型:str, <span class="keyword">text</span>, <span class="built_in">log</span>
返回值解析:
最新值(字符)的长度
参数 和<span class="keyword">last</span>的类似.
例如:
strlen(<span class="number">0</span>) 等同于 strlen(<span class="comment">#1)</span>
strlen(<span class="comment">#3) - 最新的第三个值的长度</span>
strlen(<span class="number">0</span>,<span class="number">86400</span>) - 一天前最新值的长度
</code></pre><h3 id="25-sum">25.sum</h3>
<pre><code>参数<span class="symbol">:sec</span> <span class="keyword">or</span> <span class="comment">#num</span>
值类型<span class="symbol">:float</span>, int
返回值解析<span class="symbol">:</span>
一段时间内采集值求和.这段时间可以设置成秒或者一个数字(用<span class="comment">#前缀,表示多少个),这是第一个参数.</span>
从zabbix1.<span class="number">8.2</span>开始支持秒,可选参数time_shift.
</code></pre>]]></content>
    <summary type="html"><![CDATA[<p>本文主要讲述zabbix触发器函数.]]></summary>
    
      <category term="monitor" scheme="http://loveliuli.com/tags/monitor/"/>
    
      <category term="监控" scheme="http://loveliuli.com/categories/%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Zabbix低层次发现初体验]]></title>
    <link href="http://loveliuli.com/2014/08/05/monitor/monitor_04/"/>
    <id>http://loveliuli.com/2014/08/05/monitor/monitor_04/</id>
    <published>2014-08-05T09:36:12.000Z</published>
    <updated>2014-08-04T09:51:29.000Z</updated>
    <content type="html"><![CDATA[<p>本文主要讲述zabbix低层次发现硬盘设备.详细过程如下.<a id="more"></a></p>
<h3 id="1-创建模板">1.创建模板</h3>
<p><img src="http://ww4.sinaimg.cn/large/b7ec873bgw1ej0qvz7acjj21hb06mdip.jpg" alt="创建模板"></p>
<h3 id="2-创建item_prototypes">2.创建item prototypes</h3>
<p><img src="http://ww3.sinaimg.cn/large/b7ec873bgw1ej0qwfju8lj21g20g0adf.jpg" alt="创建item prototypes"></p>
<h3 id="3-创建graph_prototypes">3.创建graph prototypes</h3>
<p><img src="http://ww2.sinaimg.cn/large/b7ec873bgw1ej0qwx6898j21hc0ag43r.jpg" alt="创建graph prototypes">    </p>
<h3 id="4-Agent端配置">4.Agent端配置</h3>
<p>agent端的配置文件需要进行如下配置:</p>
<pre><code>UserParameter=custom.vfs.dev.discovery,<span class="regexp">/bin/sh</span> /opt/zabbix/disk.sh
<span class="comment"># reads completed successfully</span>
UserParameter=custom.vfs.dev.<span class="keyword">read</span>.ops[<span class="variable">*]</span>,cat /proc/diskstats | egrep <span class="variable">$1</span> | head -<span class="number">1</span> | awk <span class="string">'{print $$4}'</span>
<span class="comment"># sectors read</span>
UserParameter=custom.vfs.dev.<span class="keyword">read</span>.sectors[<span class="variable">*]</span>,cat /proc/diskstats | egrep <span class="variable">$1</span> | head -<span class="number">1</span> | awk <span class="string">'{print $$6}'</span>
<span class="comment"># time spent reading (ms)</span>
UserParameter=custom.vfs.dev.<span class="keyword">read</span>.ms[<span class="variable">*]</span>,cat /proc/diskstats | egrep <span class="variable">$1</span> | head -<span class="number">1</span> | awk <span class="string">'{print $$7}'</span>
<span class="comment"># writes completed</span>
UserParameter=custom.vfs.dev.<span class="keyword">write</span>.ops[<span class="variable">*]</span>,cat /proc/diskstats | egrep <span class="variable">$1</span> | head -<span class="number">1</span> | awk <span class="string">'{print $$8}'</span>
<span class="comment"># sectors written</span>
UserParameter=custom.vfs.dev.<span class="keyword">write</span>.sectors[<span class="variable">*]</span>,cat /proc/diskstats | egrep <span class="variable">$1</span> | head -<span class="number">1</span> | awk <span class="string">'{print $$10}'</span>
<span class="comment"># time spent writing (ms)</span>
UserParameter=custom.vfs.dev.<span class="keyword">write</span>.ms[<span class="variable">*]</span>,cat /proc/diskstats | egrep <span class="variable">$1</span> | head -<span class="number">1</span> | awk <span class="string">'{print $$11}'</span>
<span class="comment"># I/Os currently in progress</span>
UserParameter=custom.vfs.dev.io.active[<span class="variable">*]</span>,cat /proc/diskstats | egrep <span class="variable">$1</span> | head -<span class="number">1</span> | awk <span class="string">'{print $$12}'</span>
<span class="comment"># time spent doing I/Os (ms)</span>
UserParameter=custom.vfs.dev.io.ms[<span class="variable">*]</span>,cat /proc/diskstats | egrep <span class="variable">$1</span> | head -<span class="number">1</span> | awk <span class="string">'{print $$13}'</span>
</code></pre><p>[root@pay-03-vmain:/opt/zabbix]# cat disk.sh </p>
<pre><code><span class="shebang">#!/bin/bash</span>
diskarray=(`cat /proc/diskstats |grep -E <span class="string">"\bvd[abcdefg]\b|\bsd[abcdefg]\b|\bc0d0p[0~9]\b"</span>|grep -i <span class="string">"\b<span class="variable">$1</span>\b"</span>|awk <span class="string">'{print $3}'</span>|sort|uniq   <span class="number">2</span>&gt;/dev/null`)
length=<span class="variable">${#diskarray[@]}</span>
<span class="built_in">printf</span> <span class="string">"{\n"</span>
<span class="built_in">printf</span>  <span class="string">'\t'</span><span class="string">"\"data\":["</span>
<span class="keyword">for</span> ((i=<span class="number">0</span>;i&lt;<span class="variable">$length</span>;i++))
<span class="keyword">do</span>
    <span class="built_in">printf</span> <span class="string">'\n\t\t{'</span>
    <span class="built_in">printf</span> <span class="string">"\"{#DISK}\":\"<span class="variable">${diskarray[$i]}</span>\"}"</span>
    <span class="keyword">if</span> [ <span class="variable">$i</span> <span class="operator">-lt</span> $[<span class="variable">$length</span>-<span class="number">1</span>] ];<span class="keyword">then</span>
            <span class="built_in">printf</span> <span class="string">','</span>
    <span class="keyword">fi</span>
<span class="keyword">done</span>
<span class="built_in">printf</span>  <span class="string">"\n\t]\n"</span>
<span class="built_in">printf</span> <span class="string">"}\n"</span>
</code></pre><p>注意chown -R zabbix:zabbix /opt/zabbix/disk.sh</p>
<h3 id="5-效果图">5.效果图</h3>
<p><img src="http://ww4.sinaimg.cn/large/b7ec873bgw1ej0qz0o7uoj21gr0f647j.jpg" alt="自动发现效果图"></p>
]]></content>
    <summary type="html"><![CDATA[<p>本文主要讲述zabbix低层次发现硬盘设备.详细过程如下.]]></summary>
    
      <category term="monitor" scheme="http://loveliuli.com/tags/monitor/"/>
    
      <category term="监控" scheme="http://loveliuli.com/categories/%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ZABBIX的zatree插件安装和优化]]></title>
    <link href="http://loveliuli.com/2014/08/01/monitor/monitor_03/"/>
    <id>http://loveliuli.com/2014/08/01/monitor/monitor_03/</id>
    <published>2014-08-01T13:36:12.000Z</published>
    <updated>2014-08-01T13:37:56.000Z</updated>
    <content type="html"><![CDATA[<h2 id="一-zabbix的zatree插件安装">一.zabbix的zatree插件安装</h2>
<p>zabbix最近出了个比较有用的插件zatree,能够将所有的graph总体显示,而且可以根据关键字和时间进行查询以及汇总.<a id="more"></a><br>以下是zabbix-2.2.*版本的zatree安装,其他方式大家也可以去github项目获取安装方式.<br>    [github项目链接]: <a href="https://github.com/spide4k/zatree/tree/master/zabbix-2.2.x" target="_blank">https://github.com/spide4k/zatree/tree/master/zabbix-2.2.x</a>  嘿嘿,下面开始插件安装吧.</p>
<h3 id="1-下载文件">1.下载文件</h3>
<pre><code>git <span class="keyword">clone</span> https:<span class="comment">//github.com/spide4k/zatree.git zatree</span>
</code></pre><h3 id="2-复制相关文件">2.复制相关文件</h3>
<p>假如zabbix web目录位置在/var/www/zabbix,定义zabbix目录</p>
<pre><code><span class="attribute">ZABBIX_PATH</span>=<span class="string">/var/www/zabbix</span>
</code></pre><p>复制相关文件和目录</p>
<pre><code><span class="keyword">cp</span> -rf zatree/zabbix-<span class="number">2.2</span><span class="preprocessor">.x</span> $ZABBIX_PATH/zatree

cd $ZABBIX_PATH/zatree/addfile

<span class="keyword">cp</span> -f CLineGraphDraw_Zabbix<span class="preprocessor">.php</span> CGraphDraw_Zabbix<span class="preprocessor">.php</span> CImageTextTable_Zabbix<span class="preprocessor">.php</span> $ZABBIX_PATH/include/classes/graphdraw/

<span class="keyword">cp</span> -f zabbix<span class="preprocessor">.php</span> zabbix_chart<span class="preprocessor">.php</span> $ZABBIX_PATH/

<span class="keyword">cp</span> -f CItemValue<span class="preprocessor">.php</span> $ZABBIX_PATH/api/classes/

<span class="keyword">cp</span> -f menu<span class="preprocessor">.inc</span><span class="preprocessor">.php</span> $ZABBIX_PATH/include/
<span class="keyword">cp</span> -f main<span class="preprocessor">.js</span> $ZABBIX_PATH/js/

<span class="keyword">cp</span> -f API<span class="preprocessor">.php</span> $ZABBIX_PATH/include/classes/api/
</code></pre><h3 id="3-支持web_interface,修改配置文件">3.支持web interface,修改配置文件</h3>
<pre><code>vi <span class="variable">$ZABBIX_PATH</span>/zatree/zabbix_config.php

<span class="string">'user'</span>=&gt;<span class="string">'xxx'</span>, <span class="comment">//web登陆的用户名</span>

<span class="string">'passowrd'</span>=&gt;<span class="string">'xxx'</span>, <span class="comment">//web登陆的密码</span>
</code></pre><h2 id="二-zatree优化之左侧栏目按照主机组显示">二.zatree优化之左侧栏目按照主机组显示</h2>
<p>admin用户效果图:</p>
<p><img src="http://ww4.sinaimg.cn/large/b7ec873bgw1eixfrybl7kj20gr04vjru.jpg" alt="admin用户看到的组效果"></p>
<p>普通用户效果图:</p>
<p><img src="http://ww1.sinaimg.cn/large/b7ec873bgw1eixg0haajlj20h5038gls.jpg" alt="普通用户看到的组效果"></p>
<p>优化法如下，这里针对zatree的zabbix-2.2.x版本做修改，方法同样适合zabbix-2.0.x版本：<br>进入zatree目录，修改以下两个文件：<br><strong>第一步：zabbix_ajax.php</strong><br>传递$_COOKIE[‘zbx_sessionid’]给hostgroupGet()，获取当前用户具有readable权限的主机组列表。</p>
<pre><code><span class="variable">$groups</span> = <span class="variable">$zabbixApi</span>-&gt;hostgroupGet(<span class="keyword">array</span>(<span class="string">"output"</span> =&gt; <span class="string">"extend"</span>, <span class="string">"monitored_hosts"</span> =&gt; <span class="keyword">true</span>)
</code></pre><p>修改为：</p>
<pre><code><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">'zbx_sessionid'</span>])){
    <span class="variable">$groups</span> = <span class="variable">$zabbixApi</span>-&gt;hostgroupGet(<span class="keyword">array</span>(<span class="string">"output"</span> =&gt; <span class="string">"extend"</span>, <span class="string">"monitored_hosts"</span> =&gt; <span class="keyword">true</span>), <span class="string">''</span>, <span class="variable">$_COOKIE</span>[<span class="string">'zbx_sessionid'</span>]);
        } <span class="keyword">else</span> {
        <span class="variable">$groups</span> = <span class="variable">$zabbixApi</span>-&gt;hostgroupGet(<span class="keyword">array</span>(<span class="string">"output"</span> =&gt; <span class="string">"extend"</span>, <span class="string">"monitored_hosts"</span> =&gt; <span class="keyword">true</span>));
    }
</code></pre><p><strong>第二步：ZabbixApiAbstract.class.php</strong><br>修改2594行hostgroupGet方法，添加$sessionid形参。当传入$sessionid参数时，设置$this-&gt;auth的值为$sessionid。</p>
<pre><code><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">hostgroupGet</span><span class="params">(<span class="variable">$params</span>=array<span class="params">()</span>, <span class="variable">$arrayKeyProperty</span>=<span class="string">''</span>)</span>
{</span>
    <span class="comment">// get params array for request</span>
    <span class="variable">$params</span> = <span class="variable">$this</span>-&gt;getRequestParamsArray(<span class="variable">$params</span>);

    <span class="comment">// request</span>
    <span class="keyword">return</span> <span class="variable">$this</span>-&gt;request(<span class="string">'hostgroup.get'</span>, <span class="variable">$params</span>, <span class="variable">$arrayKeyProperty</span>);
}
</code></pre><p>修改为：</p>
<pre><code><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">hostgroupGet</span><span class="params">(<span class="variable">$params</span>=array<span class="params">()</span>, <span class="variable">$arrayKeyProperty</span>=<span class="string">''</span>, <span class="variable">$sessionid</span>=<span class="string">''</span>)</span>
{</span>
    <span class="comment">// get params array for request</span>
    <span class="variable">$params</span> = <span class="variable">$this</span>-&gt;getRequestParamsArray(<span class="variable">$params</span>);

    <span class="comment">// request</span>
    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$sessionid</span>))
        <span class="variable">$this</span>-&gt;auth = <span class="variable">$sessionid</span>;
    <span class="keyword">return</span> <span class="variable">$this</span>-&gt;request(<span class="string">'hostgroup.get'</span>, <span class="variable">$params</span>, <span class="variable">$arrayKeyProperty</span>);
}
</code></pre><h3 id="三-优化zatree支持HTTP_Basic_Authorization认证访问zabbix_API">三.优化zatree支持HTTP Basic Authorization认证访问zabbix API</h3>
<p>考虑到让zabbix更加安全,所以采用了https的方式进行访问,但是这是zatree标签页打开时,出现了一堆错误.如下图所示:</p>
<p><img src="http://ww4.sinaimg.cn/large/b7ec873bgw1eixg86gkn0j215502ptag.jpg" alt="报错"></p>
<h2 id="优化过程如下:">优化过程如下:</h2>
<p>进入zatree目录，修改以下四个文件：<br><strong>步骤一、修改zabbix_config.php</strong><br>添加HTTP Basic Authorization认证用户名和密码参数。如果没有设置HTTP Basic Authorization认证，http_user和http_password的值为空就行。</p>
<pre><code><span class="php"><span class="preprocessor">&lt;?php</span> 
<span class="keyword">global</span> <span class="variable">$zabbix_api_config</span>;

<span class="variable">$zabbix_api_config</span>=<span class="keyword">array</span>(
<span class="string">'api_url'</span>=&gt;<span class="string">'api_jsonrpc.php'</span>,
<span class="string">'http_user'</span>=&gt;<span class="string">'xxxxx'</span>,
<span class="string">'http_password'</span>=&gt;<span class="string">'xxxxx'</span>,
<span class="string">'user'</span>=&gt;<span class="string">'Admin'</span>,
<span class="string">'passowrd'</span>=&gt;<span class="string">'xxxxx'</span>,
<span class="string">'graph_url'</span>=&gt;<span class="string">'zabbix_chart.php'</span>,
);

<span class="preprocessor">?&gt;</span></span>
</code></pre><p><strong>步骤二、修改zabbix_ajax.php第33行，添加当有HTTP认证时的$url_http。</strong><br>    $url_http = dirname(dirname(‘http://‘ . $_SERVER[‘HTTP_HOST’] . $_SERVER[“REQUEST_URI”]));</p>
<p>修改为：</p>
<pre><code><span class="keyword">if</span> (!empty(<span class="variable">$zabbix_api_config</span>[<span class="string">'http_user'</span>]) &amp;&amp; !empty(<span class="variable">$zabbix_api_config</span>[<span class="string">'http_password'</span>])) {
            <span class="variable">$url_http</span> = <span class="keyword">dirname</span>(<span class="keyword">dirname</span>(<span class="string">'https://'</span> . <span class="keyword">trim</span>(<span class="variable">$zabbix_api_config</span>[<span class="string">'http_user'</span>]) . <span class="string">':'</span> . <span class="keyword">trim</span>(<span class="variable">$zabbix_api_config</span>[<span class="string">'http_password'</span>]) . <span class="string">'@'</span> . <span class="variable">$_SERVER</span>[<span class="string">'HTTP_HOST'</span>] . <span class="variable">$_SERVER</span>[<span class="string">"REQUEST_URI"</span>]));
    } <span class="keyword">else</span> {
            <span class="variable">$url_http</span> = <span class="keyword">dirname</span>(<span class="keyword">dirname</span>(<span class="string">'https://'</span> . <span class="variable">$_SERVER</span>[<span class="string">'HTTP_HOST'</span>] . <span class="variable">$_SERVER</span>[<span class="string">"REQUEST_URI"</span>]));
    }
</code></pre><p><strong>步骤三、修改graph.php第141行，添加当有HTTP认证时的$url_http。</strong><br>    $url_http = dirname(dirname(‘http://‘ . $_SERVER[‘HTTP_HOST’] . $_SERVER[“REQUEST_URI”]));</p>
<p>修改为：</p>
<pre><code><span class="keyword">if</span> (!empty(<span class="variable">$zabbix_api_config</span>[<span class="string">'http_user'</span>]) &amp;&amp; !empty(<span class="variable">$zabbix_api_config</span>[<span class="string">'http_password'</span>])) {
            <span class="variable">$url_http</span> = <span class="keyword">dirname</span>(<span class="keyword">dirname</span>(<span class="string">'https://'</span> . <span class="keyword">trim</span>(<span class="variable">$zabbix_api_config</span>[<span class="string">'http_user'</span>]) . <span class="string">':'</span> . <span class="keyword">trim</span>(<span class="variable">$zabbix_api_config</span>[<span class="string">'http_password'</span>]) . <span class="string">'@'</span> . <span class="variable">$_SERVER</span>[<span class="string">'HTTP_HOST'</span>] . <span class="variable">$_SERVER</span>[<span class="string">"REQUEST_URI"</span>]));
    } <span class="keyword">else</span> {
            <span class="variable">$url_http</span> = <span class="keyword">dirname</span>(<span class="keyword">dirname</span>(<span class="string">'https://'</span> . <span class="variable">$_SERVER</span>[<span class="string">'HTTP_HOST'</span>] . <span class="variable">$_SERVER</span>[<span class="string">"REQUEST_URI"</span>]));
    }
</code></pre><p><strong>步骤四、修改big_graph.php第88行，添加当有HTTP认证时的$url_http。</strong><br>    $url_http = dirname(dirname(‘http://‘ . $_SERVER[‘HTTP_HOST’] . $_SERVER[“REQUEST_URI”]));</p>
<p>修改为：</p>
<pre><code><span class="keyword">if</span> (!empty(<span class="variable">$zabbix_api_config</span>[<span class="string">'http_user'</span>]) &amp;&amp; !empty(<span class="variable">$zabbix_api_config</span>[<span class="string">'http_password'</span>])) {
            <span class="variable">$url_http</span> = <span class="keyword">dirname</span>(<span class="keyword">dirname</span>(<span class="string">'https://'</span> . <span class="keyword">trim</span>(<span class="variable">$zabbix_api_config</span>[<span class="string">'http_user'</span>]) . <span class="string">':'</span> . <span class="keyword">trim</span>(<span class="variable">$zabbix_api_config</span>[<span class="string">'http_password'</span>]) . <span class="string">'@'</span> . <span class="variable">$_SERVER</span>[<span class="string">'HTTP_HOST'</span>] . <span class="variable">$_SERVER</span>[<span class="string">"REQUEST_URI"</span>]));
    } <span class="keyword">else</span> {
            <span class="variable">$url_http</span> = <span class="keyword">dirname</span>(<span class="keyword">dirname</span>(<span class="string">'https://'</span> . <span class="variable">$_SERVER</span>[<span class="string">'HTTP_HOST'</span>] . <span class="variable">$_SERVER</span>[<span class="string">"REQUEST_URI"</span>]));
    } 
</code></pre>]]></content>
    <summary type="html"><![CDATA[<h2 id="一-zabbix的zatree插件安装">一.zabbix的zatree插件安装</h2>
<p>zabbix最近出了个比较有用的插件zatree,能够将所有的graph总体显示,而且可以根据关键字和时间进行查询以及汇总.]]></summary>
    
      <category term="monitor" scheme="http://loveliuli.com/tags/monitor/"/>
    
      <category term="监控" scheme="http://loveliuli.com/categories/%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Zabbix Agent安装和配置]]></title>
    <link href="http://loveliuli.com/2014/07/31/monitor/monitor_02/"/>
    <id>http://loveliuli.com/2014/07/31/monitor/monitor_02/</id>
    <published>2014-07-31T05:11:12.000Z</published>
    <updated>2014-07-31T06:12:16.000Z</updated>
    <content type="html"><![CDATA[<h3 id="1-下载安装包(zabbix-2-2-4-tar-gz)">1.下载安装包(zabbix-2.2.4.tar.gz)</h3>
<p><a href="http://www.zabbix.com/download.php" target="_blank">http://www.zabbix.com/download.php</a><br>由于目前server安装的最新稳定版本2.2.4,所以agent端安装不得高于server端版本,且agent端一般改动比较小,所以安装2.2.1(stable)和2.2.4(stable)都行.<a id="more"></a><br>说明:由于线上已经安装了一套agent环境,为了不引起冲突,所以本次安装时,选择了源码编译,自己指定安装路径和进程启动用户.正常情况下建议使用rpm安装.</p>
<h3 id="2-安装">2.安装</h3>
<h4 id="2-1_zabbix安装目录:_/etc/zabbix_agentd_om">2.1 zabbix安装目录: /etc/zabbix_agentd_om</h4>
<pre><code><span class="keyword">mkdir</span> -p /etc/zabbix_agentd_om
</code></pre><h4 id="2-2_进程启动用户zabbix:">2.2 进程启动用户zabbix:</h4>
<pre><code>groupadd  zabbix <span class="attribute">-g</span> <span class="number">200</span>
useradd zabbix <span class="attribute">-g</span> zabbix <span class="attribute">-u</span> <span class="number">200</span> 
</code></pre><h4 id="2-3_创建log和pid文件目录">2.3 创建log和pid文件目录</h4>
<pre><code>mkdir <span class="attribute">-p</span> /<span class="built_in">var</span>/<span class="keyword">log</span>/zabbix
chown zabbix:zabbix /<span class="built_in">var</span>/<span class="keyword">log</span>/zabbix
mkdir <span class="attribute">-p</span> /<span class="built_in">var</span>/run/zabbix
chown zabbix:zabbix /<span class="built_in">var</span>/run/zabbix
</code></pre><h4 id="2-4_安装">2.4 安装</h4>
<pre><code><span class="comment">tar</span> <span class="comment">zxvf</span> <span class="comment">zabbix</span><span class="literal">-</span><span class="comment">2</span><span class="string">.</span><span class="comment">2</span><span class="string">.</span><span class="comment">4</span><span class="string">.</span><span class="comment">tar</span><span class="string">.</span><span class="comment">gz</span>
<span class="comment">cd</span> <span class="comment">zabbix</span><span class="literal">-</span><span class="comment">2</span><span class="string">.</span><span class="comment">2</span><span class="string">.</span><span class="comment">4</span>
<span class="string">.</span><span class="comment">/configure</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">prefix=/etc/zabbix_agentd_om</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">agent</span>
<span class="comment">make</span> <span class="comment">&amp;&amp;</span> <span class="comment">make</span> <span class="comment">install</span>
</code></pre><h3 id="3-修改配置">3.修改配置</h3>
<pre><code>mkdir -p /etc/zabbix_agentd_om/etc/zabbix_agentd<span class="preprocessor">.conf</span><span class="preprocessor">.d</span>/
cat /dev/null &gt; /etc/zabbix_agentd_om/etc/zabbix_agentd<span class="preprocessor">.conf</span>
vi /etc/zabbix_agentd_om/etc/zabbix_agentd<span class="preprocessor">.conf</span>
PidFile=/var/run/zabbix/zabbix_agented_om<span class="preprocessor">.pid</span>
LogFile=/var/log/zabbix/zabbix_agented_om<span class="preprocessor">.log</span>
LogFileSize=<span class="number">0</span>
erver=<span class="number">42.62</span>.**.**
ListenPort=<span class="number">10060</span>
ServerActive=<span class="number">42.62</span>.**.**
Hostname=Zabbix server
Include=/etc/zabbix_agentd_om/etc/zabbix_agentd<span class="preprocessor">.conf</span><span class="preprocessor">.d</span>/
</code></pre><h3 id="4-开启和关闭脚本添加">4.开启和关闭脚本添加</h3>
<p>将以下脚本添加到/etc/init.d/目录下,并给予执行权限<br>    cat /etc/init.d/zabbix_agent_om </p>
<pre><code><span class="shebang">#!/bin/sh</span>
<span class="comment"># chkconfig: - 86 14</span>
<span class="comment"># description: Zabbix agent daemon</span>
<span class="comment"># processname: zabbix_agentd</span>
<span class="comment"># config: /etc/zabbix_agentd_om/etc/zabbix_agentd.conf</span>
<span class="comment"># Source function library.</span>
. /etc/rc.d/init.d/functions
<span class="keyword">if</span> [ -x /etc/zabbix_agentd_om/sbin/zabbix_agentd ]; <span class="keyword">then</span>
<span class="keyword">exec</span>=etc/zabbix_agentd_om/sbin/zabbix_agentd
<span class="keyword">else</span>
<span class="keyword">exit</span> <span class="number">5</span>
<span class="keyword">fi</span>
prog=<span class="variable">${exec##*/}</span>
conf=/etc/zabbix_agentd_om/etc/zabbix_agentd.conf
lockfile=/var/lock/subsys/zabbix-agented
<span class="function"><span class="title">start</span></span>()
{
<span class="built_in">echo</span> -n $<span class="string">"Starting Zabbix agent: "</span>
daemon <span class="variable">$exec</span> -c <span class="variable">$conf</span>
rv=$?
<span class="built_in">echo</span>
[ <span class="variable">$rv</span> <span class="operator">-eq</span> <span class="number">0</span> ] &amp;&amp; touch <span class="variable">$lockfile</span>
<span class="keyword">return</span> <span class="variable">$rv</span>
}
<span class="function"><span class="title">stop</span></span>()
{
<span class="built_in">echo</span> -n $<span class="string">"Shutting down Zabbix agent: "</span>
killall -u zabbix
rv=$?
<span class="built_in">echo</span>
[ <span class="variable">$rv</span> <span class="operator">-eq</span> <span class="number">0</span> ] &amp;&amp; rm <span class="operator">-f</span> <span class="variable">$lockfile</span>
<span class="keyword">return</span> <span class="variable">$rv</span>
}
<span class="function"><span class="title">restart</span></span>()
{
stop
start
}
<span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span>
start|stop|restart)
    <span class="variable">$1</span>
    ;;
force-reload)
    restart
    ;;
status)
    status <span class="variable">$prog</span>
    ;;
*)
    <span class="built_in">echo</span> $<span class="string">"Usage: <span class="variable">$0</span> {start|stop|status|restart|try-restart|force-reload}"</span>
    <span class="keyword">exit</span> <span class="number">2</span>
    ;;
<span class="keyword">esac</span>
</code></pre><h3 id="5-开启和关闭方法:">5.开启和关闭方法:</h3>
<pre><code>chmod 755 /etc/init.d/zabbix_agent_om
service zabbix_agent_om <span class="operator"><span class="keyword">start</span>
service zabbix_agent_om stop    </span>
</code></pre><h3 id="6-设置开机启动:">6.设置开机启动:</h3>
<pre><code>chkconfig <span class="comment">--add zabbix_agent_om </span>
chkconfig zabbix_agent_om <span class="command"><span class="keyword">on</span></span>
</code></pre><h3 id="7-防火墙设置">7.防火墙设置</h3>
<p>在agent需要允许能和server端通讯,记得保存iptables.</p>
]]></content>
    <summary type="html"><![CDATA[<h3 id="1-下载安装包(zabbix-2-2-4-tar-gz)">1.下载安装包(zabbix-2.2.4.tar.gz)</h3>
<p><a href="http://www.zabbix.com/download.php" target="_blank">http://www.zabbix.com/download.php</a><br>由于目前server安装的最新稳定版本2.2.4,所以agent端安装不得高于server端版本,且agent端一般改动比较小,所以安装2.2.1(stable)和2.2.4(stable)都行.]]></summary>
    
      <category term="monitor" scheme="http://loveliuli.com/tags/monitor/"/>
    
      <category term="监控" scheme="http://loveliuli.com/categories/%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Not all processes could be identified]]></title>
    <link href="http://loveliuli.com/2014/07/30/monitor/monitor_01/"/>
    <id>http://loveliuli.com/2014/07/30/monitor/monitor_01/</id>
    <published>2014-07-30T08:36:12.000Z</published>
    <updated>2014-07-31T06:13:56.000Z</updated>
    <content type="html"><![CDATA[<p><strong>Zabbix log里面发现”Not all processes could be identified”报错</strong><br>在zabbix_agentd.conf里添加了一条监控项:<a id="more"></a></p>
<pre><code>UserParameter=linux.people[<span class="variable">*]</span>,netstat -antp|<span class="keyword">grep</span> <span class="string">'$1'</span>|<span class="keyword">grep</span> -v LISTEN|wc -l
</code></pre><p>重启代理进程后,发现监控里的值为0，看了下日志发现不停地输出如下的log:</p>
<pre><code>(<span class="keyword">Not</span> <span class="keyword">all</span> processes could be identified, non-owned <span class="keyword">process</span> info 
will <span class="keyword">not</span> be shown, you would have <span class="keyword">to</span> be root <span class="keyword">to</span> see it <span class="keyword">all</span>.)
</code></pre><p>一直没找到问题所在,虽然在server端采集数据是没有任何问题,但是客户端的log中会一直报这个错误,后来su到zabbix用户执行了一下该命令,才发现了问题所在.<br>原来是netstat -lantup里的<strong>-p</strong>参数需要<strong>root</strong>用户才能使用,所以结果值总是为0.<br>修改如下:<br>UserParameter=linux.people[*],netstat -ant|grep ‘$1’|grep -v LISTEN|wc -l<br>重启后正常了.</p>
<p>不能使用root,有时候执行一些命令还确实不方便.为了能让zabbix执行一些需要root才能支持的命令、参数等，只有使用sudo，解决步骤如下：</p>
<pre><code><span class="comment"># groupadd monitor</span>
<span class="comment"># usermod -G zabbix</span>
<span class="comment"># visudo -f /etc/sudoers                   #增加最后两行,并且注释掉Defaults    requiretty</span>
<span class="comment">#Defaults    requiretty          #一定要注释掉</span>
<span class="constant">Cmnd_Alias</span> <span class="constant">MONITORING</span> = <span class="regexp">/bin/netstat</span>,<span class="regexp">/sbin/sudo</span>   <span class="comment">#以后还需要添加什么命令添加到后面即可</span>
%monitor        <span class="constant">ALL</span>=(root) <span class="constant">NOPASSWD</span><span class="symbol">:MONITORING</span>
</code></pre>]]></content>
    <summary type="html"><![CDATA[<p><strong>Zabbix log里面发现”Not all processes could be identified”报错</strong><br>在zabbix_agentd.conf里添加了一条监控项:]]></summary>
    
      <category term="monitor" scheme="http://loveliuli.com/tags/monitor/"/>
    
      <category term="监控" scheme="http://loveliuli.com/categories/%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[linux测试即时网速]]></title>
    <link href="http://loveliuli.com/2014/05/12/script/script_01/"/>
    <id>http://loveliuli.com/2014/05/12/script/script_01/</id>
    <published>2014-05-12T12:59:19.000Z</published>
    <updated>2014-07-31T14:22:47.000Z</updated>
    <content type="html"><![CDATA[<h3 id="平时在测试客户端网速时,linux上没有好的工具,只好自己写脚本来进行测试,以下是我平时实用的一个测试脚本工具,比较简单,仅供参考-<!-more->">平时在测试客户端网速时,linux上没有好的工具,只好自己写脚本来进行测试,以下是我平时实用的一个测试脚本工具,比较简单,仅供参考.<a id="more"></a></h3>
<h3 id="Cat_bw_test-sh">Cat bw_test.sh</h3>
<pre><code><span class="shebang">#!/bin/bash</span>
<span class="function"><span class="title">out</span></span>()
{
<span class="keyword">exit</span>
}

trap <span class="string">"out"</span> <span class="number">2</span>

<span class="keyword">while</span> <span class="literal">true</span>
<span class="keyword">do</span>
string1=`ifconfig <span class="variable">$1</span> | grep <span class="string">"bytes"</span> | awk <span class="string">'{printf $2}'</span>`
rx1=<span class="variable">${string1##bytes:}</span>
string2=`ifconfig <span class="variable">$1</span> | grep <span class="string">"bytes"</span> | awk <span class="string">'{printf $6}'</span>`
tx1=<span class="variable">${string2##bytes:}</span>
sleep <span class="number">1</span>
clear
string3=`ifconfig <span class="variable">$1</span> | grep <span class="string">"bytes"</span> | awk <span class="string">'{printf $2}'</span>`
rx2=<span class="variable">${string3##bytes:}</span>
string4=`ifconfig <span class="variable">$1</span> | grep <span class="string">"bytes"</span> | awk <span class="string">'{printf $6}'</span>`
tx2=<span class="variable">${string4##bytes:}</span>
<span class="comment">#echo $rx1</span>
<span class="comment">#echo $rx2</span>
temp=`expr <span class="variable">$rx2</span> - <span class="variable">$rx1</span>`
r1=`expr <span class="variable">$temp</span> / <span class="number">1024</span>`
<span class="built_in">echo</span> 当前下载速度:<span class="variable">$r1</span> kB/s
temp=`expr <span class="variable">$tx2</span> - <span class="variable">$tx1</span>`
r2=`expr <span class="variable">$temp</span> / <span class="number">1024</span>`
<span class="built_in">echo</span> 当前上传速度:<span class="variable">$r2</span> KB/s
<span class="keyword">done</span>
</code></pre>]]></content>
    <summary type="html"><![CDATA[<h3 id="平时在测试客户端网速时,linux上没有好的工具,只好自己写脚本来进行测试,以下是我平时实用的一个测试脚本工具,比较简单,仅供参考-<!-more->">平时在测试客户端网速时,linux上没有好的工具,只好自己写脚本来进行测试,以下是我平时实用的一个测试脚本工具,比较简单,仅供参考.]]></summary>
    
      <category term="script" scheme="http://loveliuli.com/tags/script/"/>
    
      <category term="脚本" scheme="http://loveliuli.com/categories/%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[NFS报错：rpc.rquotad: unable to register service|mount: wrong fs type, bad option, bad superblock]]></title>
    <link href="http://loveliuli.com/2014/05/08/app/app_01_nfs_error/"/>
    <id>http://loveliuli.com/2014/05/08/app/app_01_nfs_error/</id>
    <published>2014-05-08T10:40:56.000Z</published>
    <updated>2014-05-23T10:30:26.000Z</updated>
    <content type="html"><![CDATA[<p>今天准备在正式环境测试一下puppet,搭建仓库后,需要搭建一个nfs来进行文件共享,让下面发agnet通过nfs安装.<a id="more"></a><br>yum install nfs-utils成功后,启动nfs服务时,发现有如下报错信息:</p>
<pre><code>[root@master ~]<span class="preprocessor"># service nfsd start</span>
nfsd: unrecognized service
[root@master ~]<span class="preprocessor"># service nfs start</span>
Starting NFS services:  [  OK  ]
Starting NFS quotas: Cannot register service: RPC: Unable <span class="keyword">to</span> receive; errno = Connection refused
rpc.rquotad: unable <span class="keyword">to</span> register (RQUOTAPROG, RQUOTAVERS, udp).
[FAILED]
Starting NFS mountd: [FAILED]
Starting NFS daemon: rpc.nfsd: writing fd <span class="keyword">to</span> kernel failed: errno <span class="number">111</span> (Connection refused)
rpc.nfsd: unable <span class="keyword">to</span> <span class="keyword">set</span> any sockets <span class="keyword">for</span> nfsd
[FAILED]
</code></pre><p>从原因来看是由于不能注册服务,RPC不能接收.网上一查,发现原因如下:</p>
<p>Redhat系列在6.0版本之后没有portmap服务控制rpc的启动，NFS和nfslock的启动需要向rpc进行注册，rpc不启动的话就会报错。</p>
<hr>
<p>解决方法：启动rpcbind&amp;rpcidmap rpcbind是6.0版本后默认的RPC服务，所以要先于nfs启动。<br>如果不启动rpcidmap则会造成用户权限的映射错误，用户的权限看起来是一串数字。<br>具体解决如下:</p>
<pre><code>[root<span class="variable">@master</span> ~]<span class="comment"># service nfs start</span>
<span class="constant">Starting</span> <span class="constant">NFS</span> <span class="symbol">services:</span>  [  <span class="constant">OK</span>  ]
<span class="constant">Starting</span> <span class="constant">NFS</span> <span class="symbol">quotas:</span> <span class="constant">Cannot</span> register <span class="symbol">service:</span> <span class="constant">RPC</span><span class="symbol">:</span> <span class="constant">Unable</span> to receive; errno = <span class="constant">Connection</span> refused
rpc.<span class="symbol">rquotad:</span> unable to register (<span class="constant">RQUOTAPROG</span>, <span class="constant">RQUOTAVERS</span>, udp).
[<span class="constant">FAILED</span>]
<span class="constant">Starting</span> <span class="constant">NFS</span> <span class="symbol">mountd:</span> [<span class="constant">FAILED</span>]
<span class="constant">Starting</span> <span class="constant">NFS</span> <span class="symbol">daemon:</span> rpc.<span class="symbol">nfsd:</span> writing fd to kernel <span class="symbol">failed:</span> errno <span class="number">111</span> (<span class="constant">Connection</span> refused)
rpc.<span class="symbol">nfsd:</span> unable to set any sockets <span class="keyword">for</span> nfsd
[<span class="constant">FAILED</span>]
[root<span class="variable">@master</span> ~]<span class="comment"># /etc/init.d/rpcbind start</span>
<span class="constant">Starting</span> <span class="symbol">rpcbind:</span> [  <span class="constant">OK</span>  ]
[root<span class="variable">@master</span> ~]<span class="comment"># /etc/init.d/rpcidmapd start</span>
<span class="constant">Starting</span> <span class="constant">RPC</span> <span class="symbol">idmapd:</span> [  <span class="constant">OK</span>  ]
[root<span class="variable">@master</span> ~]<span class="comment"># service nfs start</span>
<span class="constant">Starting</span> <span class="constant">NFS</span> <span class="symbol">services:</span>  [  <span class="constant">OK</span>  ]
<span class="constant">Starting</span> <span class="constant">NFS</span> <span class="symbol">quotas:</span> [  <span class="constant">OK</span>  ]
<span class="constant">Starting</span> <span class="constant">NFS</span> <span class="symbol">mountd:</span> [  <span class="constant">OK</span>  ]
<span class="constant">Starting</span> <span class="constant">NFS</span> <span class="symbol">daemon:</span> [  <span class="constant">OK</span>  ]
[root<span class="variable">@master</span> ~]<span class="comment"># </span>
</code></pre><hr>
<p>在客户端挂载nfs时,发现有如下问题:</p>
<pre><code>root@agent1 media]<span class="preprocessor"># /bin/mount -t nfs 10.20.102.154:/puppet /media/</span>
mount: wrong fs type, bad <span class="keyword">option</span>, bad superblock <span class="keyword">on</span> <span class="number">10.20</span><span class="number">.102</span><span class="number">.154</span>:/puppet,
   missing codepage <span class="keyword">or</span> helper program, <span class="keyword">or</span> other <span class="keyword">error</span>
   (<span class="keyword">for</span> several filesystems (e.g. nfs, cifs) you might
   need a /sbin/mount.&lt;type&gt; helper program)
   <span class="keyword">In</span> some cases useful info <span class="keyword">is</span> found <span class="keyword">in</span> syslog - <span class="keyword">try</span>
   dmesg | tail  <span class="keyword">or</span> so
</code></pre><p>解决方法是在客户端也需要启动rpcbind和rpcidmapd服务.</p>
<pre><code>[root<span class="property">@agent1</span> ~]<span class="comment"># /etc/init.d/rpcbind start</span>
Starting <span class="attribute">rpcbind</span>: [  OK  ]
[root<span class="property">@agent1</span> ~]<span class="comment"># /etc/init.d/rpcidmapd start</span>
Starting RPC <span class="attribute">idmapd</span>: [  OK  ]    
[root<span class="property">@agent1</span> ~]<span class="comment"># mount -t nfs 10.20.102.154:/puppet /media</span>
[root<span class="property">@agent1</span> ~]<span class="comment"># df -h</span>
Filesystem            Size  Used Avail Use% Mounted <span class="literal">on</span>
/dev/mapper/vg_centos6264-lv_root
                   <span class="number">25</span>G   <span class="number">17</span>G  <span class="number">6.2</span>G  <span class="number">74</span>% /
tmpfs                 <span class="number">1.5</span>G     <span class="number">0</span>  <span class="number">1.5</span>G   <span class="number">0</span>% /dev/shm
/dev/vda1             <span class="number">485</span>M   <span class="number">51</span>M  <span class="number">409</span>M  <span class="number">11</span>% /boot
<span class="number">10.20</span><span class="number">.102</span><span class="number">.154</span>:/puppet
                   <span class="number">26</span>G   <span class="number">17</span>G  <span class="number">7.7</span>G  <span class="number">68</span>% /media
[root<span class="property">@agent1</span> ~]<span class="comment"># </span>
</code></pre>]]></content>
    <summary type="html"><![CDATA[<p>今天准备在正式环境测试一下puppet,搭建仓库后,需要搭建一个nfs来进行文件共享,让下面发agnet通过nfs安装.]]></summary>
    
      <category term="application" scheme="http://loveliuli.com/tags/application/"/>
    
      <category term="应用" scheme="http://loveliuli.com/categories/%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Welcome to my blog]]></title>
    <link href="http://loveliuli.com/2014/02/21/performance/Performance_01/"/>
    <id>http://loveliuli.com/2014/02/21/performance/Performance_01/</id>
    <published>2014-02-21T08:36:12.000Z</published>
    <updated>2014-05-23T11:45:36.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to my blog!.</p>
]]></content>
    
    
      <category term="Performance tuning" scheme="http://loveliuli.com/tags/Performance%20tuning/"/>
    
      <category term="优化" scheme="http://loveliuli.com/categories/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[SED单行脚本快速参考]]></title>
    <link href="http://loveliuli.com/2014/02/21/command/commd_01/"/>
    <id>http://loveliuli.com/2014/02/21/command/commd_01/</id>
    <published>2014-02-21T08:36:12.000Z</published>
    <updated>2014-08-06T03:02:23.000Z</updated>
    <content type="html"><![CDATA[<p>SED单行脚本快速参考（Unix 流编辑器） 整理：Eric Pement  - 电邮：pemente[at]northpark[dot]edu  <a id="more"></a> </p>
<h3 id="在每一行后面增加一空行">在每一行后面增加一空行</h3>
<pre><code>sed G
</code></pre><h3 id="将原来的所有空行删除并在每一行后面增加一空行。">将原来的所有空行删除并在每一行后面增加一空行。</h3>
<h3 id="这样在输出的文本中每一行后面将有且只有一空行。">这样在输出的文本中每一行后面将有且只有一空行。</h3>
<pre><code>sed <span class="string">'/^$/d;G'</span>
</code></pre><h3 id="在每一行后面增加两行空行">在每一行后面增加两行空行</h3>
<pre><code>sed <span class="string">'G;G'</span>
</code></pre><h3 id="将第一个脚本所产生的所有空行删除（即删除所有偶数行）">将第一个脚本所产生的所有空行删除（即删除所有偶数行）</h3>
<pre><code>sed <span class="string">'n;d'</span>
</code></pre><h3 id="在匹配式样“regex”的行之前插入一空行">在匹配式样“regex”的行之前插入一空行</h3>
<pre><code>sed <span class="string">'/regex/{x;p;x;}'</span>
</code></pre><h3 id="在匹配式样“regex”的行之后插入一空行">在匹配式样“regex”的行之后插入一空行</h3>
<pre><code>sed <span class="string">'/regex/G'</span>
</code></pre><h3 id="在匹配式样“regex”的行之前和之后各插入一空行">在匹配式样“regex”的行之前和之后各插入一空行</h3>
<pre><code>sed <span class="string">'/regex/{x;p;x;G;}'</span>
</code></pre><h2 id="编号：">编号：</h2>
<h3 id="为文件中的每一行进行编号（简单的左对齐方式）。这里使用了“制表符”">为文件中的每一行进行编号（简单的左对齐方式）。这里使用了“制表符”</h3>
<h3 id="（tab，见本文末尾关于’\t’的用法的描述）而不是空格来对齐边缘。">（tab，见本文末尾关于’\t’的用法的描述）而不是空格来对齐边缘。</h3>
<pre><code>sed = filename | sed 'N;s/<span class="command">\n</span>/<span class="command">\t</span>/'
</code></pre><h3 id="对文件中的所有行编号（行号在左，文字右端对齐）。">对文件中的所有行编号（行号在左，文字右端对齐）。</h3>
<pre><code>sed = filename | sed 'N; s/^/     /; s/ *<span class="command">\(</span>.<span class="command">\{</span>6,<span class="command">\}</span><span class="command">\)</span><span class="command">\n</span>/\1  /'
</code></pre><h3 id="对文件中的所有行编号，但只显示非空白行的行号。">对文件中的所有行编号，但只显示非空白行的行号。</h3>
<pre><code>sed <span class="string">'/./='</span> filename | sed <span class="string">'/./N; s/\n/ /'</span>
</code></pre><h3 id="计算行数_（模拟_“wc_-l”）">计算行数 （模拟 “wc -l”）</h3>
<pre><code>sed <span class="attribute">-n</span> <span class="string">'$='</span>
</code></pre><h2 id="文本转换和替代：">文本转换和替代：</h2>
<h3 id="Unix环境：转换DOS的新行符（CR/LF）为Unix格式。">Unix环境：转换DOS的新行符（CR/LF）为Unix格式。</h3>
<pre><code>sed <span class="string">'s/.$//'</span>                     <span class="comment"># 假设所有行以CR/LF结束</span>
sed <span class="string">'s/^M$//'</span>                    <span class="comment"># 在bash/tcsh中，将按Ctrl-M改为按Ctrl-V</span>
sed <span class="string">'s/\x0D$//'</span>                  <span class="comment"># ssed、gsed 3.02.80，及更高版本</span>
</code></pre><h3 id="Unix环境：转换Unix的新行符（LF）为DOS格式。">Unix环境：转换Unix的新行符（LF）为DOS格式。</h3>
<pre><code>sed <span class="string">"s/$/`echo -e \\\r`/"</span>        <span class="comment"># 在ksh下所使用的命令</span>
sed <span class="string">'s/$'</span><span class="string">"/`echo \\\r`/"</span>         <span class="comment"># 在bash下所使用的命令</span>
sed <span class="string">"s/$/`echo \\\r`/"</span>           <span class="comment"># 在zsh下所使用的命令</span>
sed <span class="string">'s/$/\r/'</span>                    <span class="comment"># gsed 3.02.80 及更高版本</span>
</code></pre><h3 id="DOS环境：转换Unix新行符（LF）为DOS格式。">DOS环境：转换Unix新行符（LF）为DOS格式。</h3>
<pre><code>sed <span class="string">"s/$//"</span>                      <span class="comment"># 方法 1</span>
sed -n p                         <span class="comment"># 方法 2</span>
</code></pre><h3 id="DOS环境：转换DOS新行符（CR/LF）为Unix格式。">DOS环境：转换DOS新行符（CR/LF）为Unix格式。</h3>
<h3 id="下面的脚本只对UnxUtils_sed_4-0-7_及更高版本有效。要识别UnxUtils版本的">下面的脚本只对UnxUtils sed 4.0.7 及更高版本有效。要识别UnxUtils版本的</h3>
<h3 id="sed可以通过其特有的“—text”选项。你可以使用帮助选项（“—help”）看">sed可以通过其特有的“—text”选项。你可以使用帮助选项（“—help”）看</h3>
<h3 id="其中有无一个“—text”项以此来判断所使用的是否是UnxUtils版本。其它DOS">其中有无一个“—text”项以此来判断所使用的是否是UnxUtils版本。其它DOS</h3>
<h3 id="版本的的sed则无法进行这一转换。但可以用“tr”来实现这一转换。">版本的的sed则无法进行这一转换。但可以用“tr”来实现这一转换。</h3>
<pre><code>sed <span class="string">"s/\r//"</span> infile &gt;outfile     <span class="comment"># UnxUtils sed v4.0.7 或更高版本</span>
tr <span class="operator">-d</span> \r &lt;infile &gt;outfile        <span class="comment"># GNU tr 1.22 或更高版本</span>
</code></pre><h3 id="将每一行前导的“空白字符”（空格，制表符）删除">将每一行前导的“空白字符”（空格，制表符）删除</h3>
<h3 id="使之左对齐">使之左对齐</h3>
<pre><code>sed <span class="string">'s/^[ \t]*//'</span>                <span class="array"># </span>见本文末尾关于<span class="string">'\t'</span>用法的描述
</code></pre><h3 id="将每一行拖尾的“空白字符”（空格，制表符）删除">将每一行拖尾的“空白字符”（空格，制表符）删除</h3>
<pre><code>sed <span class="string">'s/[ \t]*$//'</span>                <span class="array"># </span>见本文末尾关于<span class="string">'\t'</span>用法的描述
</code></pre><h3 id="将每一行中的前导和拖尾的空白字符删除">将每一行中的前导和拖尾的空白字符删除</h3>
<pre><code>sed <span class="attribute">'s</span>/^[ \t]*<span class="comment">//;s/[ \t]*$//'</span>
</code></pre><h3 id="在每一行开头处插入5个空格（使全文向右移动5个字符的位置）">在每一行开头处插入5个空格（使全文向右移动5个字符的位置）</h3>
<pre><code>sed <span class="string">'s/^/     /'</span>
</code></pre><h3 id="以79个字符为宽度，将所有文本右对齐">以79个字符为宽度，将所有文本右对齐</h3>
<pre><code>sed <span class="operator">-e</span> :a <span class="operator">-e</span> <span class="string">'s/^.\{1,78\}$/ &amp;/;ta'</span>  <span class="comment"># 78个字符外加最后的一个空格</span>
</code></pre><h3 id="以79个字符为宽度，使所有文本居中。在方法1中，为了让文本居中每一行的前">以79个字符为宽度，使所有文本居中。在方法1中，为了让文本居中每一行的前</h3>
<h3 id="头和后头都填充了空格。_在方法2中，在居中文本的过程中只在文本的前面填充">头和后头都填充了空格。 在方法2中，在居中文本的过程中只在文本的前面填充</h3>
<h3 id="空格，并且最终这些空格将有一半会被删除。此外每一行的后头并未填充空格。">空格，并且最终这些空格将有一半会被删除。此外每一行的后头并未填充空格。</h3>
<pre><code>sed  <span class="operator">-e</span> :a <span class="operator">-e</span> <span class="string">'s/^.\{1,77\}$/ &amp; /;ta'</span>                     <span class="comment"># 方法1</span>
sed  <span class="operator">-e</span> :a <span class="operator">-e</span> <span class="string">'s/^.\{1,77\}$/ &amp;/;ta'</span> <span class="operator">-e</span> <span class="string">'s/\( *\)\1/\1/'</span>  <span class="comment"># 方法2</span>
</code></pre><h4 id="在每一行中查找字串“foo”，并将找到的“foo”替换为“bar”">在每一行中查找字串“foo”，并将找到的“foo”替换为“bar”</h4>
<pre><code>sed <span class="string">'s/foo/bar/'</span>                 <span class="comment"># 只替换每一行中的第一个“foo”字串</span>
sed <span class="string">'s/foo/bar/4'</span>                <span class="comment"># 只替换每一行中的第四个“foo”字串</span>
sed <span class="string">'s/foo/bar/g'</span>                <span class="comment"># 将每一行中的所有“foo”都换成“bar”</span>
sed <span class="string">'s/\(.*\)foo\(.*foo\)/\1bar\2/'</span> <span class="comment"># 替换倒数第二个“foo”</span>
sed <span class="string">'s/\(.*\)foo/\1bar/'</span>            <span class="comment"># 替换最后一个“foo”</span>
</code></pre><h3 id="只在行中出现字串“baz”的情况下将“foo”替换成“bar”">只在行中出现字串“baz”的情况下将“foo”替换成“bar”</h3>
<pre><code>sed <span class="string">'/baz/s/foo/bar/g'</span>
</code></pre><h3 id="将“foo”替换成“bar”，并且只在行中未出现字串“baz”的情况下替换">将“foo”替换成“bar”，并且只在行中未出现字串“baz”的情况下替换</h3>
<pre><code>sed <span class="string">'/baz/!s/foo/bar/g'</span>
</code></pre><h3 id="不管是“scarlet”“ruby”还是“puce”，一律换成“red”">不管是“scarlet”“ruby”还是“puce”，一律换成“red”</h3>
<pre><code>sed <span class="string">'s/scarlet/red/g;s/ruby/red/g;s/puce/red/g'</span>  <span class="comment">#对多数的sed都有效</span>
gsed <span class="string">'s/scarlet\|ruby\|puce/red/g'</span>               <span class="comment"># 只对GNU sed有效</span>
</code></pre><h3 id="倒置所有行，第一行成为最后一行，依次类推（模拟“tac”）。">倒置所有行，第一行成为最后一行，依次类推（模拟“tac”）。</h3>
<h3 id="由于某些原因，使用下面命令时HHsed_v1-5会将文件中的空行删除">由于某些原因，使用下面命令时HHsed v1.5会将文件中的空行删除</h3>
<pre><code><span class="title">sed</span> <span class="string">'1!G;h;$!d'</span>               <span class="comment"># 方法1</span>
sed -n <span class="string">'1!G;h;<span class="variable">$p</span>'</span>             <span class="comment"># 方法2</span>
</code></pre><h3 id="将行中的字符逆序排列，第一个字成为最后一字，……（模拟“rev”）">将行中的字符逆序排列，第一个字成为最后一字，……（模拟“rev”）</h3>
<pre><code>sed '/<span class="command">\n</span>/!G;s/<span class="command">\(</span>.<span class="command">\)</span><span class="command">\(</span>.*<span class="command">\n</span><span class="command">\)</span>/<span class="special">&amp;</span>\2\1/;//D;s/.//'
</code></pre><h3 id="将每两行连接成一行（类似“paste”）">将每两行连接成一行（类似“paste”）</h3>
<pre><code>sed <span class="string">'$!N;s/\n/ /'</span>
</code></pre><h3 id="如果当前行以反斜杠“\”结束，则将下一行并到当前行末尾">如果当前行以反斜杠“\”结束，则将下一行并到当前行末尾</h3>
<h3 id="并去掉原来行尾的反斜杠">并去掉原来行尾的反斜杠</h3>
<pre><code>sed <span class="operator">-e</span> :a <span class="operator">-e</span> <span class="string">'/\\$/N; s/\\\n//; ta'</span>
</code></pre><h3 id="如果当前行以等号开头，将当前行并到上一行末尾">如果当前行以等号开头，将当前行并到上一行末尾</h3>
<h3 id="并以单个空格代替原来行头的“=”">并以单个空格代替原来行头的“=”</h3>
<pre><code>sed <span class="operator">-e</span> :a <span class="operator">-e</span> <span class="string">'$!N;s/\n=/ /;ta'</span> <span class="operator">-e</span> <span class="string">'P;D'</span>
</code></pre><h3 id="为数字字串增加逗号分隔符号，将“1234567”改为“1,234,567”">为数字字串增加逗号分隔符号，将“1234567”改为“1,234,567”</h3>
<pre><code>gsed ':a;s/<span class="command">\B</span><span class="special">[</span>0-9<span class="special">]</span><span class="command">\{</span>3<span class="command">\}</span><span class="command">\&gt;</span>/,<span class="special">&amp;</span>/;ta'                     <span class="special">#</span> GNU sed
sed -e :a -e 's/<span class="command">\(</span>.*<span class="special">[</span>0-9<span class="special">]</span><span class="command">\)</span><span class="command">\(</span><span class="special">[</span>0-9<span class="special">]</span><span class="command">\{</span>3<span class="command">\}</span><span class="command">\)</span>/\1,\2/;ta'  <span class="special">#</span> 其他sed
</code></pre><h3 id="为带有小数点和负号的数值增加逗号分隔符（GNU_sed）">为带有小数点和负号的数值增加逗号分隔符（GNU sed）</h3>
<pre><code>gsed <span class="attribute">-r</span> <span class="string">':a;s/(^|[^0-9.])([0-9]+)([0-9]{3})/\1\2,\3/g;ta'</span>
</code></pre><h3 id="在每5行后增加一空白行_（在第5，10，15，20，等行后增加一空白行）">在每5行后增加一空白行 （在第5，10，15，20，等行后增加一空白行）</h3>
<pre><code>gsed <span class="string">'0~5G'</span>                      <span class="comment"># 只对GNU sed有效</span>
sed <span class="string">'n;n;n;n;G;'</span>                 <span class="comment"># 其他sed</span>
</code></pre><h2 id="选择性地显示特定行：">选择性地显示特定行：</h2>
<h3 id="显示文件中的前10行_（模拟“head”的行为）">显示文件中的前10行 （模拟“head”的行为）</h3>
<pre><code>sed 10q
</code></pre><h3 id="显示文件中的第一行_（模拟“head_-1”命令）">显示文件中的第一行 （模拟“head -1”命令）</h3>
<pre><code>sed q
</code></pre><h3 id="显示文件中的最后10行_（模拟“tail”）">显示文件中的最后10行 （模拟“tail”）</h3>
<pre><code>sed <span class="operator">-e</span> :a <span class="operator">-e</span> <span class="string">'$q;N;11,$D;ba'</span>
</code></pre><h4 id="显示文件中的最后2行（模拟“tail_-2”命令）">显示文件中的最后2行（模拟“tail -2”命令）</h4>
<pre><code>sed <span class="string">'$!N;$!D'</span>
</code></pre><h3 id="显示文件中的最后一行（模拟“tail_-1”）">显示文件中的最后一行（模拟“tail -1”）</h3>
<pre><code><span class="title">sed</span> <span class="string">'$!d'</span>                        <span class="comment"># 方法1</span>
sed -n <span class="string">'<span class="variable">$p</span>'</span>                      <span class="comment"># 方法2</span>
</code></pre><h3 id="显示文件中的倒数第二行">显示文件中的倒数第二行</h3>
<pre><code>sed <span class="operator">-e</span> <span class="string">'$!{h;d;}'</span> <span class="operator">-e</span> x              <span class="comment"># 当文件中只有一行时，输入空行</span>
sed <span class="operator">-e</span> <span class="string">'1{$q;}'</span> <span class="operator">-e</span> <span class="string">'$!{h;d;}'</span> <span class="operator">-e</span> x  <span class="comment"># 当文件中只有一行时，显示该行</span>
sed <span class="operator">-e</span> <span class="string">'1{$d;}'</span> <span class="operator">-e</span> <span class="string">'$!{h;d;}'</span> <span class="operator">-e</span> x  <span class="comment"># 当文件中只有一行时，不输出</span>
</code></pre><h3 id="只显示匹配正则表达式的行（模拟“grep”）">只显示匹配正则表达式的行（模拟“grep”）</h3>
<pre><code>sed -n <span class="string">'/regexp/p'</span>               <span class="comment"># 方法1</span>
sed <span class="string">'/regexp/!d'</span>                 <span class="comment"># 方法2</span>
</code></pre><h3 id="只显示“不”匹配正则表达式的行（模拟“grep_-v”）">只显示“不”匹配正则表达式的行（模拟“grep -v”）</h3>
<pre><code>sed -n <span class="string">'/regexp/!p'</span>              <span class="comment"># 方法1，与前面的命令相对应</span>
sed <span class="string">'/regexp/d'</span>                  <span class="comment"># 方法2，类似的语法</span>
</code></pre><h3 id="查找“regexp”并将匹配行的上一行显示出来，但并不显示匹配行">查找“regexp”并将匹配行的上一行显示出来，但并不显示匹配行</h3>
<pre><code>sed <span class="attribute">-n</span> <span class="string">'/regexp/{g;1!p;};h'</span>
</code></pre><h3 id="查找“regexp”并将匹配行的下一行显示出来，但并不显示匹配行">查找“regexp”并将匹配行的下一行显示出来，但并不显示匹配行</h3>
<pre><code>sed <span class="attribute">-n</span> <span class="string">'/regexp/{n;p;}'</span>
</code></pre><h3 id="显示包含“regexp”的行及其前后行，并在第一行之前加上“regexp”所">显示包含“regexp”的行及其前后行，并在第一行之前加上“regexp”所</h3>
<h3 id="在行的行号_（类似“grep_-A1_-B1”）">在行的行号 （类似“grep -A1 -B1”）</h3>
<pre><code>sed <span class="attribute">-n</span> <span class="attribute">-e</span> <span class="string">'/regexp/{=;x;1!p;g;$!N;p;D;}'</span> <span class="attribute">-e</span> h
</code></pre><h3 id="显示包含“AAA”、“BBB”或“CCC”的行（任意次序）">显示包含“AAA”、“BBB”或“CCC”的行（任意次序）</h3>
<pre><code>sed <span class="string">'/AAA/!d; /BBB/!d; /CCC/!d'</span>  <span class="comment"># 字串的次序不影响结果</span>
</code></pre><h3 id="显示包含“AAA”、“BBB”和“CCC”的行（固定次序）">显示包含“AAA”、“BBB”和“CCC”的行（固定次序）</h3>
<pre><code>sed <span class="string">'/AAA.*BBB.*CCC/!d'</span>
</code></pre><h3 id="显示包含“AAA”“BBB”或“CCC”的行_（模拟“egrep”）">显示包含“AAA”“BBB”或“CCC”的行 （模拟“egrep”）</h3>
<pre><code>sed <span class="operator">-e</span> <span class="string">'/AAA/b'</span> <span class="operator">-e</span> <span class="string">'/BBB/b'</span> <span class="operator">-e</span> <span class="string">'/CCC/b'</span> <span class="operator">-e</span> d    <span class="comment"># 多数sed</span>
gsed <span class="string">'/AAA\|BBB\|CCC/!d'</span>                        <span class="comment"># 对GNU sed有效</span>
</code></pre><h3 id="显示包含“AAA”的段落_（段落间以空行分隔）">显示包含“AAA”的段落 （段落间以空行分隔）</h3>
<h3 id="HHsed_v1-5_必须在“x;”后加入“G;”，接下来的3个脚本都是这样">HHsed v1.5 必须在“x;”后加入“G;”，接下来的3个脚本都是这样</h3>
<pre><code>sed <span class="operator">-e</span> <span class="string">'/./{H;$!d;}'</span> <span class="operator">-e</span> <span class="string">'x;/AAA/!d;'</span>
</code></pre><h3 id="显示包含“AAA”“BBB”和“CCC”三个字串的段落_（任意次序）">显示包含“AAA”“BBB”和“CCC”三个字串的段落 （任意次序）</h3>
<pre><code>sed <span class="operator">-e</span> <span class="string">'/./{H;$!d;}'</span> <span class="operator">-e</span> <span class="string">'x;/AAA/!d;/BBB/!d;/CCC/!d'</span>
</code></pre><h3 id="显示包含“AAA”、“BBB”、“CCC”三者中任一字串的段落_（任意次序）">显示包含“AAA”、“BBB”、“CCC”三者中任一字串的段落 （任意次序）</h3>
<pre><code>sed <span class="operator">-e</span> <span class="string">'/./{H;$!d;}'</span> <span class="operator">-e</span> <span class="string">'x;/AAA/b'</span> <span class="operator">-e</span> <span class="string">'/BBB/b'</span> <span class="operator">-e</span> <span class="string">'/CCC/b'</span> <span class="operator">-e</span> d
gsed <span class="string">'/./{H;$!d;};x;/AAA\|BBB\|CCC/b;d'</span>         <span class="comment"># 只对GNU sed有效</span>
</code></pre><h3 id="显示包含65个或以上字符的行">显示包含65个或以上字符的行</h3>
<pre><code>sed -n '/^.<span class="command">\{</span>65<span class="command">\}</span>/p'
</code></pre><h3 id="显示包含65个以下字符的行">显示包含65个以下字符的行</h3>
<pre><code>sed -n <span class="string">'/^.\{65\}/!p'</span>            <span class="comment"># 方法1，与上面的脚本相对应</span>
sed <span class="string">'/^.\{65\}/d'</span>                <span class="comment"># 方法2，更简便一点的方法</span>
</code></pre><h3 id="显示部分文本——从包含正则表达式的行开始到最后一行结束">显示部分文本——从包含正则表达式的行开始到最后一行结束</h3>
<pre><code><span class="title">sed</span> -n <span class="string">'/regexp/,<span class="variable">$p</span>'</span>
</code></pre><h3 id="显示部分文本——指定行号范围（从第8至第12行，含8和12行）">显示部分文本——指定行号范围（从第8至第12行，含8和12行）</h3>
<pre><code>sed -n <span class="string">'8,12p'</span>                   <span class="comment"># 方法1</span>
sed <span class="string">'8,12!d'</span>                     <span class="comment"># 方法2</span>
</code></pre><h3 id="显示第52行">显示第52行</h3>
<pre><code>sed -n <span class="string">'52p'</span>                     <span class="comment"># 方法1</span>
sed <span class="string">'52!d'</span>                       <span class="comment"># 方法2</span>
sed <span class="string">'52q;d'</span>                      <span class="comment"># 方法3, 处理大文件时更有效率</span>
</code></pre><h3 id="从第3行开始，每7行显示一次">从第3行开始，每7行显示一次</h3>
<pre><code><span class="title">gsed</span> -n <span class="string">'3~7p'</span>                   <span class="comment"># 只对GNU sed有效</span>
sed -n <span class="string">'3,<span class="variable">${p;n;n;n;n;n;n;}</span>'</span>     <span class="comment"># 其他sed</span>
</code></pre><h3 id="显示两个正则表达式之间的文本（包含）">显示两个正则表达式之间的文本（包含）</h3>
<pre><code>sed -n <span class="string">'/Iowa/,/Montana/p'</span>       <span class="comment"># 区分大小写方式</span>
</code></pre><h2 id="选择性地删除特定行：">选择性地删除特定行：</h2>
<h3 id="显示通篇文档，除了两个正则表达式之间的内容">显示通篇文档，除了两个正则表达式之间的内容</h3>
<pre><code>sed <span class="string">'/Iowa/,/Montana/d'</span>
</code></pre><h3 id="删除文件中相邻的重复行（模拟“uniq”）">删除文件中相邻的重复行（模拟“uniq”）</h3>
<h3 id="只保留重复行中的第一行，其他行删除">只保留重复行中的第一行，其他行删除</h3>
<pre><code>sed '<span class="formula">$!N; /^<span class="command">\(</span>.*<span class="command">\)</span><span class="command">\n</span>\1$</span>/!P; D'
</code></pre><h3 id="删除文件中的重复行，不管有无相邻。注意hold_space所能支持的缓存">删除文件中的重复行，不管有无相邻。注意hold space所能支持的缓存</h3>
<h3 id="大小，或者使用GNU_sed。">大小，或者使用GNU sed。</h3>
<pre><code>sed -n 'G; s/<span class="command">\n</span>/<span class="special">&amp;</span><span class="special">&amp;</span>/; /^<span class="command">\(</span><span class="special">[</span> -<span class="special">~</span><span class="special">]</span>*<span class="command">\n</span><span class="command">\)</span>.*<span class="command">\n</span>\1/d; s/<span class="command">\n</span>//; h; P'
</code></pre><h3 id="删除除重复行外的所有行（模拟“uniq_-d”）">删除除重复行外的所有行（模拟“uniq -d”）</h3>
<pre><code>sed '<span class="formula">$!N; s/^<span class="command">\(</span>.*<span class="command">\)</span><span class="command">\n</span>\1$</span>/\1/; t; D'
</code></pre><h3 id="删除文件中开头的10行">删除文件中开头的10行</h3>
<pre><code>sed <span class="string">'1,10d'</span>
</code></pre><h3 id="删除文件中的最后一行">删除文件中的最后一行</h3>
<pre><code><span class="title">sed</span> <span class="string">'<span class="variable">$d</span>'</span>
</code></pre><h3 id="删除文件中的最后两行">删除文件中的最后两行</h3>
<pre><code><span class="title">sed</span> <span class="string">'N;$!P;$!D;<span class="variable">$d</span>'</span>
</code></pre><h3 id="删除文件中的最后10行">删除文件中的最后10行</h3>
<pre><code>sed <span class="operator">-e</span> :a <span class="operator">-e</span> <span class="string">'$d;N;2,10ba'</span> <span class="operator">-e</span> <span class="string">'P;D'</span>   <span class="comment"># 方法1</span>
sed -n <span class="operator">-e</span> :a <span class="operator">-e</span> <span class="string">'1,10!{P;N;D;};N;ba'</span>  <span class="comment"># 方法2</span>
</code></pre><h3 id="删除8的倍数行">删除8的倍数行</h3>
<pre><code>gsed <span class="string">'0~8d'</span>                           <span class="comment"># 只对GNU sed有效</span>
sed <span class="string">'n;n;n;n;n;n;n;d;'</span>                <span class="comment"># 其他sed</span>
</code></pre><h3 id="删除匹配式样的行">删除匹配式样的行</h3>
<pre><code>sed <span class="string">'/pattern/d'</span>                      <span class="comment"># 删除含pattern的行。当然pattern</span>
                                   <span class="comment"># 可以换成任何有效的正则表达式</span>
</code></pre><h3 id="删除文件中的所有空行（与“grep_‘-’_”效果相同）">删除文件中的所有空行（与“grep ‘.’ ”效果相同）</h3>
<pre><code>sed <span class="string">'/^$/d'</span>                           <span class="comment"># 方法1</span>
sed <span class="string">'/./!d'</span>                           <span class="comment"># 方法2</span>
</code></pre><h3 id="只保留多个相邻空行的第一行。并且删除文件顶部和尾部的空行。">只保留多个相邻空行的第一行。并且删除文件顶部和尾部的空行。</h3>
<h3 id="（模拟“cat_-s”）">（模拟“cat -s”）</h3>
<pre><code>sed <span class="string">'/./,/^$/!d'</span>        <span class="comment">#方法1，删除文件顶部的空行，允许尾部保留一空行</span>
sed <span class="string">'/^$/N;/\n$/D'</span>      <span class="comment">#方法2，允许顶部保留一空行，尾部不留空行</span>
</code></pre><h3 id="只保留多个相邻空行的前两行。">只保留多个相邻空行的前两行。</h3>
<pre><code>sed <span class="string">'/^$/N;/\n$/N;//D'</span>
</code></pre><h3 id="删除文件顶部的所有空行">删除文件顶部的所有空行</h3>
<pre><code>sed <span class="string">'/./,$!d'</span>
</code></pre><h3 id="删除文件尾部的所有空行">删除文件尾部的所有空行</h3>
<pre><code>sed <span class="operator">-e</span> :a <span class="operator">-e</span> <span class="string">'/^\n*$/{$d;N;ba'</span> <span class="operator">-e</span> <span class="string">'}'</span>  <span class="comment"># 对所有sed有效</span>
sed <span class="operator">-e</span> :a <span class="operator">-e</span> <span class="string">'/^\n*$/N;/\n$/ba'</span>        <span class="comment"># 同上，但只对 gsed 3.02.*有效</span>
</code></pre><h3 id="删除每个段落的最后一行">删除每个段落的最后一行</h3>
<pre><code>sed <span class="attribute">-n</span> <span class="string">'/^$/{p;h;};/./{x;/./p;}'</span>
</code></pre><h2 id="特殊应用：">特殊应用：</h2>
<h3 id="移除手册页（man_page）中的nroff标记。在Unix_System_V或bash_shell下使">移除手册页（man page）中的nroff标记。在Unix System V或bash shell下使</h3>
<h3 id="用’echo’命令时可能需要加上_-e_选项。">用’echo’命令时可能需要加上 -e 选项。</h3>
<pre><code>sed <span class="string">"s/.`echo \\\b`//g"</span>    <span class="comment"># 外层的双括号是必须的（Unix环境）</span>
sed <span class="string">'s/.^H//g'</span>             <span class="comment"># 在bash或tcsh中, 按 Ctrl-V 再按 Ctrl-H</span>
sed <span class="string">'s/.\x08//g'</span>           <span class="comment"># sed 1.5，GNU sed，ssed所使用的十六进制的表示方法</span>
</code></pre><h3 id="提取新闻组或_e-mail_的邮件头">提取新闻组或 e-mail 的邮件头</h3>
<pre><code>sed <span class="string">'/^$/q'</span>                <span class="comment"># 删除第一行空行后的所有内容</span>
</code></pre><h3 id="提取新闻组或_e-mail_的正文部分">提取新闻组或 e-mail 的正文部分</h3>
<pre><code>sed <span class="string">'1,/^$/d'</span>              <span class="comment"># 删除第一行空行之前的所有内容</span>
</code></pre><h3 id="从邮件头提取“Subject”（标题栏字段），并移除开头的“Subject:”字样">从邮件头提取“Subject”（标题栏字段），并移除开头的“Subject:”字样</h3>
<pre><code>sed <span class="string">'/^Subject: */!d; s///;q'</span>
</code></pre><h3 id="从邮件头获得回复地址">从邮件头获得回复地址</h3>
<pre><code><span class="xml">sed '/</span><span class="keyword">^Reply-To:</span><span class="xml">/q; /</span><span class="keyword">^From:</span><span class="xml">/h; /./d;g;q'</span>
</code></pre><h3 id="获取邮件地址。在上一个脚本所产生的那一行邮件头的基础上进一步的将非电邮">获取邮件地址。在上一个脚本所产生的那一行邮件头的基础上进一步的将非电邮</h3>
<h3 id="地址的部分剃除。（见上一脚本）">地址的部分剃除。（见上一脚本）</h3>
<pre><code>sed 's/ <span class="emphasis">*(.*</span>)//; s/&gt;.<span class="emphasis">*//; s/.*</span>[:<span class="xml"><span class="tag">&lt;<span class="title">]</span> *//'</span></span>
</code></pre><h3 id="在每一行开头加上一个尖括号和空格（引用信息）">在每一行开头加上一个尖括号和空格（引用信息）</h3>
<pre><code>sed <span class="string">'s/^/&gt; /'</span>
</code></pre><h3 id="将每一行开头处的尖括号和空格删除（解除引用）">将每一行开头处的尖括号和空格删除（解除引用）</h3>
<pre><code>sed <span class="attribute">'s</span>/^&gt; <span class="comment">//'</span>
</code></pre><h3 id="移除大部分的HTML标签（包括跨行标签）">移除大部分的HTML标签（包括跨行标签）</h3>
<pre><code>sed <span class="operator">-e</span> :a <span class="operator">-e</span> <span class="string">'s/&lt;[^&gt;]*&gt;//g;/&lt;/N;//ba'</span>
</code></pre><h3 id="将分成多卷的uuencode文件解码。移除文件头信息，只保留uuencode编码部分。">将分成多卷的uuencode文件解码。移除文件头信息，只保留uuencode编码部分。</h3>
<h3 id="文件必须以特定顺序传给sed。下面第一种版本的脚本可以直接在命令行下输入；">文件必须以特定顺序传给sed。下面第一种版本的脚本可以直接在命令行下输入；</h3>
<h3 id="第二种版本则可以放入一个带执行权限的shell脚本中。（由Rahul_Dhesi的一">第二种版本则可以放入一个带执行权限的shell脚本中。（由Rahul Dhesi的一</h3>
<h3 id="个脚本修改而来。）">个脚本修改而来。）</h3>
<pre><code>sed <span class="string">'/^end/,/^begin/d'</span> file1 file2 <span class="keyword">...</span> fileX | uudecode   <span class="comment"># vers. 1</span>
sed <span class="string">'/^end/,/^begin/d'</span> <span class="string">"$@"</span> | uudecode                    <span class="comment"># vers. 2</span>
</code></pre><h3 id="将文件中的段落以字母顺序排序。段落间以（一行或多行）空行分隔。GNU_sed使用">将文件中的段落以字母顺序排序。段落间以（一行或多行）空行分隔。GNU sed使用</h3>
<h3 id="字元“\v”来表示垂直制表符，这里用它来作为换行符的占位符——当然你也可以">字元“\v”来表示垂直制表符，这里用它来作为换行符的占位符——当然你也可以</h3>
<h3 id="用其他未在文件中使用的字符来代替它。">用其他未在文件中使用的字符来代替它。</h3>
<pre><code>sed <span class="string">'/./{H;d;};x;s/\n/={NL}=/g'</span> <span class="built_in">file</span> | <span class="built_in">sort</span> | sed <span class="string">'1s/={NL}=//;s/={NL}=/\n/g'</span>
gsed <span class="string">'/./{H;d};x;y/\n/\v/'</span> <span class="built_in">file</span> | <span class="built_in">sort</span> | sed <span class="string">'1s/\v//;y/\v/\n/'</span>
</code></pre><h3 id="分别压缩每个-TXT文件，压缩后删除原来的文件并将压缩后的-ZIP文件">分别压缩每个.TXT文件，压缩后删除原来的文件并将压缩后的.ZIP文件</h3>
<h3 id="命名为与原来相同的名字（只是扩展名不同）。（DOS环境：“dir_/b”">命名为与原来相同的名字（只是扩展名不同）。（DOS环境：“dir /b”</h3>
<h3 id="显示不带路径的文件名）。">显示不带路径的文件名）。</h3>
<pre><code>echo @echo off &gt;zipup<span class="preprocessor">.bat</span>
dir /b *<span class="preprocessor">.txt</span> | sed <span class="string">"s/^\(.*\)\.TXT/pkzip -mo \1 \1.TXT/"</span> &gt;&gt;zipup<span class="preprocessor">.bat</span>
</code></pre><p>使用SED：Sed接受一个或多个编辑命令，并且每读入一行后就依次应用这些命令。<br>当读入第一行输入后，sed对其应用所有的命令，然后将结果输出。接着再读入第二<br>行输入，对其应用所有的命令……并重复这个过程。上一个例子中sed由标准输入设<br>备（即命令解释器，通常是以管道输入的形式）获得输入。在命令行给出一个或多<br>个文件名作为参数时，这些文件取代标准输入设备成为sed的输入。sed的输出将被<br>送到标准输出（显示器）。因此：</p>
<pre><code>cat filename | sed <span class="string">'10q'</span>         <span class="comment"># 使用管道输入</span>
sed <span class="string">'10q'</span> filename               <span class="comment"># 同样效果，但不使用管道输入</span>
sed <span class="string">'10q'</span> filename &gt; newfile     <span class="comment"># 将输出转移（重定向）到磁盘上</span>
</code></pre><p>要了解sed命令的使用说明，包括如何通过脚本文件（而非从命令行）来使用这些命<br>令，请参阅《sed &amp; awk》第二版，作者Dale Dougherty和Arnold Robbins<br>（O’Reilly，1997；<a href="http://www.ora.com），《UNIX" target="_blank">http://www.ora.com），《UNIX</a> Text Processing》，作者<br>Dale Dougherty和Tim O’Reilly（Hayden Books，1987）或者是Mike Arst写的教<br>程——压缩包的名称是“U-SEDIT2.ZIP”（在许多站点上都找得到）。要发掘sed<br>的潜力，则必须对“正则表达式”有足够的理解。正则表达式的资料可以看<br>《Mastering Regular Expressions》作者Jeffrey Friedl（O’reilly 1997）。<br>Unix系统所提供的手册页（“man”）也会有所帮助（试一下这些命令<br>“man sed”、“man regexp”，或者看“man ed”中关于正则表达式的部分），但<br>手册提供的信息比较“抽象”——这也是它一直为人所诟病的。不过，它本来就不<br>是用来教初学者如何使用sed或正则表达式的教材，而只是为那些熟悉这些工具的人<br>提供的一些文本参考。</p>
<p>括号语法：前面的例子对sed命令基本上都使用单引号（’…’）而非双引号<br>（”…”）这是因为sed通常是在Unix平台上使用。单引号下，Unix的shell（命令<br>解释器）不会对美元符（$）和后引号（<code>...</code>）进行解释和执行。而在双引号下<br>美元符会被展开为变量或参数的值，后引号中的命令被执行并以输出的结果代替<br>后引号中的内容。而在“csh”及其衍生的shell中使用感叹号（!）时需要在其前<br>面加上转义用的反斜杠（就像这样：!）以保证上面所使用的例子能正常运行<br>（包括使用单引号的情况下）。DOS版本的Sed则一律使用双引号（”…”）而不是<br>引号来圈起命令。</p>
<p>‘\t’的用法：为了使本文保持行文简洁，我们在脚本中使用’\t’来表示一个制表<br>符。但是现在大部分版本的sed还不能识别’\t’的简写方式，因此当在命令行中为<br>脚本输入制表符时，你应该直接按TAB键来输入制表符而不是输入’\t’。下列的工<br>具软件都支持’\t’做为一个正则表达式的字元来表示制表符：awk、perl、HHsed、<br>sedmod以及GNU sed v3.02.80。</p>
<p>不同版本的SED：不同的版本间的sed会有些不同之处，可以想象它们之间在语法上<br>会有差异。具体而言，它们中大部分不支持在编辑命令中间使用标签（:name）或分<br>支命令（b,t），除非是放在那些的末尾。这篇文档中我们尽量选用了可移植性较高<br>的语法，以使大多数版本的sed的用户都能使用这些脚本。不过GNU版本的sed允许使<br>用更简洁的语法。想像一下当读者看到一个很长的命令时的心情：</p>
<pre><code>sed <span class="operator">-e</span> <span class="string">'/AAA/b'</span> <span class="operator">-e</span> <span class="string">'/BBB/b'</span> <span class="operator">-e</span> <span class="string">'/CCC/b'</span> <span class="operator">-e</span> d
</code></pre><p>好消息是GNU sed能让命令更紧凑：</p>
<pre><code>sed <span class="string">'/AAA/b;/BBB/b;/CCC/b;d'</span>      <span class="comment"># 甚至可以写成</span>
sed <span class="string">'/AAA\|BBB\|CCC/b;d'</span>
</code></pre><p>此外，请注意虽然许多版本的sed接受象“/one/ s/RE1/RE2/”这种在’s’前带有空<br>格的命令，但这些版本中有些却不接受这样的命令:“/one/! s/RE1/RE2/”。这时<br>只需要把中间的空格去掉就行了。</p>
<p>速度优化：当由于某种原因（比如输入文件较大、处理器或硬盘较慢等）需要提高<br>命令执行速度时，可以考虑在替换命令（“s/…/…/”）前面加上地址表达式来<br>提高速度。举例来说：</p>
<pre><code>sed <span class="string">'s/foo/bar/g'</span> filename         <span class="comment"># 标准替换命令</span>
sed <span class="string">'/foo/ s/foo/bar/g'</span> filename   <span class="comment"># 速度更快</span>
sed <span class="string">'/foo/ s//bar/g'</span> filename      <span class="comment"># 简写形式</span>
</code></pre><p>当只需要显示文件的前面的部分或需要删除后面的内容时，可以在脚本中使用“q”<br>命令（退出命令）。在处理大的文件时，这会节省大量时间。因此：</p>
<pre><code>sed -n <span class="string">'45,50p'</span> filename           <span class="comment"># 显示第45到50行</span>
sed -n <span class="string">'51q;45,50p'</span> filename       <span class="comment"># 一样，但快得多</span>
</code></pre>]]></content>
    <summary type="html"><![CDATA[<p>SED单行脚本快速参考（Unix 流编辑器） 整理：Eric Pement  - 电邮：pemente[at]northpark[dot]edu  ]]></summary>
    
      <category term="command" scheme="http://loveliuli.com/tags/command/"/>
    
      <category term="命令" scheme="http://loveliuli.com/categories/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Welcome to my blog]]></title>
    <link href="http://loveliuli.com/2014/02/21/cluster/cluster_01/"/>
    <id>http://loveliuli.com/2014/02/21/cluster/cluster_01/</id>
    <published>2014-02-21T08:36:12.000Z</published>
    <updated>2014-05-23T09:53:07.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to my blog!.</p>
]]></content>
    
    
      <category term="cluster" scheme="http://loveliuli.com/tags/cluster/"/>
    
      <category term="集群" scheme="http://loveliuli.com/categories/%E9%9B%86%E7%BE%A4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Welcome to my blog]]></title>
    <link href="http://loveliuli.com/2014/02/21/security/security_01/"/>
    <id>http://loveliuli.com/2014/02/21/security/security_01/</id>
    <published>2014-02-21T08:36:12.000Z</published>
    <updated>2014-05-23T10:39:32.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to my blog!.</p>
]]></content>
    
    
      <category term="security" scheme="http://loveliuli.com/tags/security/"/>
    
      <category term="安全" scheme="http://loveliuli.com/categories/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Welcome to my blog]]></title>
    <link href="http://loveliuli.com/2014/02/21/network/network_01/"/>
    <id>http://loveliuli.com/2014/02/21/network/network_01/</id>
    <published>2014-02-21T08:36:12.000Z</published>
    <updated>2014-05-23T09:54:04.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to my blog!.</p>
]]></content>
    
    
      <category term="network" scheme="http://loveliuli.com/tags/network/"/>
    
      <category term="网络" scheme="http://loveliuli.com/categories/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Welcome to my blog]]></title>
    <link href="http://loveliuli.com/2014/02/21/virtual/virtual_01/"/>
    <id>http://loveliuli.com/2014/02/21/virtual/virtual_01/</id>
    <published>2014-02-21T08:36:12.000Z</published>
    <updated>2014-05-23T09:54:20.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to my blog!.</p>
]]></content>
    
    
      <category term="virtualization" scheme="http://loveliuli.com/tags/virtualization/"/>
    
      <category term="虚拟化" scheme="http://loveliuli.com/categories/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Welcome to my blog]]></title>
    <link href="http://loveliuli.com/2014/02/21/datebase/datebase_01/"/>
    <id>http://loveliuli.com/2014/02/21/datebase/datebase_01/</id>
    <published>2014-02-21T08:36:12.000Z</published>
    <updated>2014-05-23T09:51:08.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to my blog!.</p>
]]></content>
    
    
      <category term="database" scheme="http://loveliuli.com/tags/database/"/>
    
      <category term="数据库" scheme="http://loveliuli.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Welcome to my blog]]></title>
    <link href="http://loveliuli.com/2014/02/21/base/base_01/"/>
    <id>http://loveliuli.com/2014/02/21/base/base_01/</id>
    <published>2014-02-21T08:36:12.000Z</published>
    <updated>2014-05-23T11:35:21.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to my blog!.</p>
]]></content>
    
    
      <category term="base" scheme="http://loveliuli.com/tags/base/"/>
    
      <category term="基础" scheme="http://loveliuli.com/categories/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[php5.3上扩展mcrypt模块]]></title>
    <link href="http://loveliuli.com/2014/02/18/app/app_02_php_mcrypt/"/>
    <id>http://loveliuli.com/2014/02/18/app/app_02_php_mcrypt/</id>
    <published>2014-02-18T01:27:46.000Z</published>
    <updated>2014-05-23T10:31:53.000Z</updated>
    <content type="html"><![CDATA[<hr>
<p> 由于最近需要对php的模块进行扩展，所以进行了简单整理，过程如下。<a id="more"></a></p>
<h2 id="问题的解决">问题的解决</h2>
<pre><code><span class="shebang">#!/bin/bash</span>
cur_dir=<span class="variable">${pwd}</span>
tar zxvf libmcrypt-<span class="number">2.5</span>.<span class="number">8</span>.tar.gz
<span class="built_in">cd</span> libmcrypt-<span class="number">2.5</span>.<span class="number">8</span>
./configure
make &amp;&amp; make install

<span class="built_in">cd</span> ..
tar xvf mhash-<span class="number">0.9</span>.<span class="number">9.9</span>.tar.bz2
<span class="built_in">cd</span> mhash-<span class="number">0.9</span>.<span class="number">9.9</span>
./configure
make &amp;&amp; make install

<span class="built_in">cd</span> ..
tar zxvf m4-<span class="number">1.4</span>.<span class="number">9</span>.tar.gz 
<span class="built_in">cd</span> m4-<span class="number">1.4</span>.<span class="number">9</span>
./configure
make &amp;&amp; make install

<span class="built_in">cd</span> ..
tar zxvf autoconf-<span class="number">2.62</span>.tar.gz 
<span class="built_in">cd</span> autoconf-<span class="number">2.62</span>
./configure
make &amp;&amp; make install

<span class="built_in">cd</span> ..
tar zxvf mcrypt-<span class="number">2.6</span>.<span class="number">8</span>.tar.gz
<span class="built_in">cd</span> mcrypt-<span class="number">2.6</span>.<span class="number">8</span>
LD_LIBRARY_PATH=/usr/local/lib ./configure 
make &amp;&amp; make install

<span class="built_in">cd</span> ..
tar zxvf php-<span class="number">5.2</span>.<span class="number">17</span>.tar.gz
<span class="built_in">cd</span> php-<span class="number">5.2</span>.<span class="number">17</span>/ext/mcrypt/
/usr/local/
php/bin/phpize
./configure  --with-php-config=/usr/local/php/bin/php-config  
make &amp;&amp; make test &amp;&amp; make install



cp /usr/local/php/lib/php/extensions/no-debug-non-zts-<span class="number">20060613</span>/mcrypt.so /usr/local/php

service httpd restart
</code></pre><p>其他模块的扩展可以依葫芦画瓢，没有难度的。</p>
<pre><code>[root@chcp-ct01-log01 mcrypt]<span class="preprocessor"># php -m</span>
[PHP Modules]
bcmath
Core
<span class="built_in">ctype</span>
curl
<span class="built_in">date</span>
dom
ereg
fileinfo
filter
gd
gettext    
hash
iconv
json
libxml
mbstring
</code></pre><p> <strong>mcrypt</strong></p>
<pre><code><span class="tag">mysql</span>
<span class="tag">pcre</span>
<span class="tag">PDO</span>
<span class="tag">pdo_sqlite</span>
<span class="tag">Phar</span>
<span class="tag">posix</span>
<span class="tag">Reflection</span>
<span class="tag">session</span>
<span class="tag">SimpleXML</span>
<span class="tag">sockets</span>
<span class="tag">SPL</span>
<span class="tag">SQLite</span>
<span class="tag">sqlite3</span>
<span class="tag">standard</span>
<span class="tag">tokenizer</span>
<span class="tag">xml</span>
<span class="tag">xmlreader</span>
<span class="tag">xmlwriter</span>
<span class="tag">Zend</span> <span class="tag">Guard</span> <span class="tag">Loader</span>
<span class="tag">zlib</span>
<span class="attr_selector">[Zend Modules]</span>
<span class="tag">Zend</span> <span class="tag">Guard</span> <span class="tag">Loader</span>
</code></pre>]]></content>
    <summary type="html"><![CDATA[<hr>
<p> 由于最近需要对php的模块进行扩展，所以进行了简单整理，过程如下。]]></summary>
    
      <category term="php_modules" scheme="http://loveliuli.com/tags/php_modules/"/>
    
      <category term="应用" scheme="http://loveliuli.com/categories/%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[php5.3.28 类型冲突]]></title>
    <link href="http://loveliuli.com/2014/01/27/app/app_03_php_problem/"/>
    <id>http://loveliuli.com/2014/01/27/app/app_03_php_problem/</id>
    <published>2014-01-27T01:27:46.000Z</published>
    <updated>2014-05-23T10:32:04.000Z</updated>
    <content type="html"><![CDATA[<hr>
<h1 id="问题出现">问题出现</h1>
<h4 id="由于最近公司扫描发现php和apache版本过低，有几个比较严重的漏洞，所以准备对php和apache进行升级。<!-more->">由于最近公司扫描发现php和apache版本过低，有几个比较严重的漏洞，所以准备对php和apache进行升级。<a id="more"></a></h4>
<pre><code>apache版本为<span class="number">2.4</span><span class="number">.3</span>，但是在开启apache发现加载libphp5<span class="preprocessor">.so</span>时错误：undefined symbol:unixd_config,
经查明原因：http2<span class="number">.4</span>目前不再支持php5<span class="number">.2</span>版本，要使用php为<span class="number">5.3</span>或者以上的版本，所以PHP也需要升级。
在官网下载<span class="number">5.3</span><span class="number">.28</span>版本后，安装过程中发现有如下问题：
./configure过程很顺利，在make环节发生错误。报错：
/root/php-<span class="number">5.3</span><span class="number">.28</span>/Zend/zend_language_parser<span class="preprocessor">.h</span>:<span class="number">317</span>:错误:与‘zendparse’类型冲突。
下一句给了提示：zend_globals_macros<span class="preprocessor">.h</span>：<span class="number">35</span>中‘zendparse’类型如此：
</code></pre><h1 id="解决过程">解决过程</h1>
<pre><code>打开./Zend/zend_language_parser.h文件，看看zendparese参数：
<span class="number">316</span> <span class="preprocessor">#<span class="keyword">if</span> defined __STDC__ || defined __cplusplus</span>
<span class="number">317</span> <span class="keyword">int</span> zendparse (<span class="keyword">void</span>);
<span class="number">318</span> <span class="preprocessor">#<span class="keyword">else</span></span>
<span class="number">319</span> <span class="keyword">int</span> zendparse ();
<span class="number">320</span> <span class="preprocessor">#<span class="keyword">endif</span></span>
再看看zend_globals_macros.h：<span class="number">35</span>是什么参数。
<span class="number">33</span> <span class="preprocessor">#ifdef ZTS</span>
<span class="number">34</span> <span class="preprocessor"># <span class="keyword">define</span> CG(v) TSRMG(compiler_globals_id, zend_compiler_globals *, v)</span>
<span class="number">35</span> <span class="keyword">int</span> zendparse(<span class="keyword">void</span> *compiler_globals);
<span class="number">36</span> <span class="preprocessor">#<span class="keyword">else</span></span>
</code></pre><p>好吧，那我就把35行的参数，改到zend_language_parser.h 317行。</p>
<pre><code><span class="number">316</span> <span class="preprocessor">#<span class="keyword">if</span> defined __STDC__ || defined __cplusplus</span>
<span class="number">317</span> <span class="keyword">int</span> zendparse (<span class="keyword">void</span> *compiler_globals);
<span class="number">318</span> <span class="preprocessor">#<span class="keyword">else</span></span>
<span class="number">319</span> <span class="keyword">int</span> zendparse ();
<span class="number">320</span> <span class="preprocessor">#<span class="keyword">endif</span></span>
</code></pre><p>再进行make，OK。<br>顺利完成了。<br>官方版本发布的太急了吧，有此错误。<br>PS：生产服务器一定三思，此参数的更改可能会影响到您的业务。</p>
]]></content>
    <summary type="html"><![CDATA[<hr>
<h1 id="问题出现">问题出现</h1>
<h4 id="由于最近公司扫描发现php和apache版本过低，有几个比较严重的漏洞，所以准备对php和apache进行升级。<!-more->">由于最近公司扫描发现php和apache版本过低，有几个比较严重的漏洞，所以准备对php和apache进行升级。]]></summary>
    
      <category term="php_problem" scheme="http://loveliuli.com/tags/php_problem/"/>
    
      <category term="应用" scheme="http://loveliuli.com/categories/%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我要笑遍世界]]></title>
    <link href="http://loveliuli.com/2013/11/29/life/life_01_laugh/"/>
    <id>http://loveliuli.com/2013/11/29/life/life_01_laugh/</id>
    <published>2013-11-29T02:48:19.000Z</published>
    <updated>2014-05-23T10:32:25.000Z</updated>
    <content type="html"><![CDATA[<h3 id="当你生活不如意时,当你工作不顺心时,当你遇到烦心事时……-">当你生活不如意时,当你工作不顺心时,当你遇到烦心事时…….</h3>
<h3 id="请仔细阅读以下文字,也许可以帮助你走出困境-<!-more->">请仔细阅读以下文字,也许可以帮助你走出困境.<a id="more"></a></h3>
<h3 id="英文原文是来自美国作家”Og_Mandino”的畅销书”The_Greatest_Salesman_in_the_World-”-">英文原文是来自美国作家”Og Mandino”的畅销书”The Greatest Salesman in the World.”.</h3>
<h3 id="<strong>我要笑遍世界。</strong>"><strong>我要笑遍世界。</strong></h3>
<pre><code>只有人类才会笑。树木受伤时也会流“血”，禽兽也会 因痛苦和饥饿而哭嚎哀鸣，
然而，只有我才具备笑的天赋，可以随时开怀大笑。
从今往后，我要培养笑的习惯。笑有助于消化，笑能减轻压力，笑，是长寿的秘方。现在我终于掌握了它。
</code></pre><h3 id="<strong>我要笑遍世界。</strong>-1"><strong>我要笑遍世界。</strong></h3>
<pre><code>我笑自己，因为自视甚高的人往往显得滑稽。千万不能跌进这个精神陷阶。
虽说我是造物主最伟大的奇迹，我不也是沧海一栗吗？
我真的知道自己从哪里来，到哪里去吗？我现在所关心的事情，十年后看来，不会显得愚蠢吗？
为什么我要让现在发生的微不足道的琐事烦扰我？在这漫漫的历史长河中，能留下多少日落的记忆呢？
</code></pre><h3 id="<strong>我要笑遍世界。</strong>-2"><strong>我要笑遍世界。</strong></h3>
<pre><code>当我受到别人的冒犯时，当我遇到不如意的事情时，我只会流泪诅咒，却怎么笑得出来？
有一句至理名言，我要反复练习，直到它们深入我的骨髓，出口成言，让我永远保持良好的心境。
这句话，传自远古时代，它们将陪我渡过难关，使我的生活保持平衡。
这句至理名言就是：这一切都会过去。
</code></pre><h3 id="<strong>我要笑遍世界。</strong>-3"><strong>我要笑遍世界。</strong></h3>
<pre><code>世上种种到头来都会成为过去。
心力衰竭时，我安慰自己，这一切都会过去：当我因成功洋洋得意时，我提醒自己，这一切都会过去。
穷困潦倒时，我告诉自己，这一切都会过去。腰缠万贯时，我也告诉自己，这一切都会过去。
是的，昔日修筑金宇塔的人早已作古，埋在冰冷的石头下面，而金宇塔有朝一日，也会埋在沙土下面。
如果世上种种终必成空，我又为何对今天的得失斤斤计较？
</code></pre><h3 id="<strong>我要笑遍世界。</strong>-4"><strong>我要笑遍世界。</strong></h3>
<pre><code>我要用笑声点缀今天，我要用歌声照亮黑夜。
我不再苦苦寻觅快乐，我要在繁忙的工作中忘记悲伤。
我要享受今天的快乐，它不像粮食可以贮藏，更不似美酒越陈越香。
我不是为将来而活。今天播种今天收获。
</code></pre><h3 id="<strong>我要笑遍世界。</strong>-5"><strong>我要笑遍世界。</strong></h3>
<pre><code>笑声中，一切都显露本色。我笑自己的失败，它们将化为梦的云彩；我笑自己的成功，它们回复本来面目；
我笑邪恶，它们远我而去；我笑善良，它们发扬光大。
我要用我的笑容感染别人，虽然我的目的自私，但这确是成功之道，因为皱起的眉头会让顾客弃我而去。
</code></pre><h3 id="<strong>我要笑遍世界。</strong>-6"><strong>我要笑遍世界。</strong></h3>
<pre><code>从今往后，我只因幸福而落泪，因为悲伤、悔恨、挫折的泪水在商场上毫无价值，
只有微笑可以换来财富，善言可以建起一座城堡。
我不再允许自己因为变得重要、聪明、体面、强大，而忘记如何嘲笑自己和周围的一切。
在这一点上，我要永远像小孩子一样，因为只有做回小孩子，我才能尊敬别人，尊敬别人，我才不会自以为是。
</code></pre><h3 id="<strong>我要笑遍世界。</strong>-7"><strong>我要笑遍世界。</strong></h3>
<pre><code>只要我能笑，就永远不会贫穷。这也是天赋，我不再浪费它。
只有在笑声和快乐中，我才能真正体会到成功的滋味。
只有在笑声和快乐中，我才能享受到劳动的果实。
如果不是这样的话，我会失败，因为快乐是提味的美酒佳酿。
要想享受成功，必须先有快乐，而笑声便是那伴娘。
我要快乐。
我要成功。
我要成为世上最伟大的推销员。
</code></pre><h1 id="英文版本,原文是来自美国作家”Og_Mandino”的畅销书”The_Greatest_Salesman_in_the_World-”">英文版本,原文是来自美国作家”Og Mandino”的畅销书”The Greatest Salesman in the World.”</h1>
<h3 id="原文如下">原文如下</h3>
<h3 id="<strong>I_will_laugh_at_the_world-</strong>"><strong>I will laugh at the world.</strong></h3>
<pre><code>No living creature can laugh except humans.  
Trees may bleed when they are wounded, <span class="keyword">and</span> beasts <span class="keyword">in</span> <span class="keyword">the</span> field will cry <span class="keyword">in</span> pain <span class="keyword">and</span> hunger, 
yet only I have <span class="keyword">the</span> gift <span class="keyword">of</span> laughter <span class="keyword">and</span> <span class="keyword">it</span> <span class="keyword">is</span> mine <span class="keyword">to</span> use whenever I choose. 
Henceforth I will cultivate <span class="keyword">the</span> habit <span class="keyword">of</span> laughter.I will smile <span class="keyword">and</span> <span class="keyword">my</span> digestion will improve; 
I will chuckle <span class="keyword">and</span> <span class="keyword">my</span> burdens will be lightened;
I will laugh <span class="keyword">and</span> <span class="keyword">my</span> life will be lengthened <span class="keyword">for</span> this <span class="keyword">is</span> <span class="keyword">the</span> great secret <span class="keyword">of</span> long life <span class="keyword">and</span> now <span class="keyword">it</span> <span class="keyword">is</span> mine.
</code></pre><h3 id="<strong>I_will_laugh_at_the_world-</strong>-1"><strong>I will laugh at the world.</strong></h3>
<pre><code>And most <span class="keyword">of</span> all, 
I will laugh <span class="keyword">at</span> myself <span class="keyword">for</span> humans are most comical when we take ourselves too seriously.  
Never will I fall <span class="keyword">into</span> this trap <span class="keyword">of</span> <span class="keyword">the</span> mind.
For though I be nature’s greatest miracle am I <span class="keyword">not</span> still a mere grain tossed <span class="keyword">about</span> <span class="keyword">by</span> <span class="keyword">the</span> winds <span class="keyword">of</span> <span class="property">time</span>? 
Do I truly know whence I came <span class="keyword">or</span> whither I am bound? 
Will <span class="keyword">my</span> concern <span class="keyword">for</span> this <span class="property">day</span> <span class="keyword">not</span> seem foolish ten years hence?  
Why should I permit <span class="keyword">the</span> petty happenings <span class="keyword">of</span> today <span class="keyword">to</span> disturb <span class="keyword">me</span>? 
What can take place <span class="keyword">before</span> this sun sets which will <span class="keyword">not</span> seem insignificant <span class="keyword">in</span> <span class="keyword">the</span> river <span class="keyword">of</span> centuries?
</code></pre><h3 id="<strong>I_will_laugh_at_the_world-</strong>-1"><strong>I will laugh at the world.</strong></h3>
<pre><code>And how can I laugh when confronted <span class="keyword">with</span> person <span class="keyword">or</span> deed which offends <span class="keyword">me</span> so <span class="keyword">as</span> <span class="keyword">to</span> bring forth <span class="keyword">my</span> tears <span class="keyword">or</span> <span class="keyword">my</span> curses? 
Four <span class="property">words</span> I will train myself <span class="keyword">to</span> <span class="command">say</span> <span class="keyword">until</span> they become a habit so strong <span class="keyword">that</span> immediately they will appear <span class="keyword">in</span> <span class="keyword">my</span> mind whenever good humor threatens <span class="keyword">to</span> depart <span class="keyword">from</span> <span class="keyword">me</span>.  
These <span class="property">words</span>, passed down <span class="keyword">from</span> <span class="keyword">the</span> ancients, will carry <span class="keyword">me</span> <span class="keyword">through</span> <span class="keyword">every</span> adversity <span class="keyword">and</span> maintain <span class="keyword">my</span> life <span class="keyword">in</span> balance.  
These four <span class="property">words</span> are:  This too shall pass.
</code></pre><h3 id="<strong>I_will_laugh_at_the_world-</strong>-1"><strong>I will laugh at the world.</strong></h3>
<pre><code>For all worldly things shall indeed pass. 
When I am heavy <span class="keyword">with</span> heartache I shall console myself <span class="keyword">that</span> this too shall pass;
when I am puffed <span class="keyword">with</span> success I shall warn myself <span class="keyword">that</span> this too shall pass.  
When I am strangled <span class="keyword">in</span> poverty I shall <span class="keyword">tell</span> myself <span class="keyword">that</span> this too shall pass; 
when I am burdened <span class="keyword">with</span> wealth I shall <span class="keyword">tell</span> myself <span class="keyword">that</span> this too shall pass.  
Yea, verily, <span class="keyword">where</span> <span class="keyword">is</span> he who built <span class="keyword">the</span> pyramid?  Is he <span class="keyword">not</span> buried within <span class="keyword">its</span> stone? 
And will <span class="keyword">the</span> pyramid, one <span class="property">day</span>, <span class="keyword">not</span> also be buried under sand? 
If all things shall pass why should I be <span class="keyword">of</span> concern <span class="keyword">for</span> today?
</code></pre><h3 id="<strong>I_will_laugh_at_the_world-</strong>-1"><strong>I will laugh at the world.</strong></h3>
<pre><code>I will paint this <span class="property">day</span> <span class="keyword">with</span> laughter;
I will frame this night <span class="keyword">in</span> song.  
Never will I labor <span class="keyword">to</span> be happy; 
rather I will remain too busy <span class="keyword">to</span> be sad. 
I will enjoy today’s happiness today. 
It <span class="keyword">is</span> <span class="keyword">not</span> grain <span class="keyword">to</span> be stored <span class="keyword">in</span> a box. 
It <span class="keyword">is</span> <span class="keyword">not</span> wine <span class="keyword">to</span> be saved <span class="keyword">in</span> a jar.  
It cannot be saved <span class="keyword">for</span> <span class="keyword">the</span> morrow. 
It must be sown <span class="keyword">and</span> reaped <span class="function_start"><span class="keyword">on</span></span> <span class="keyword">the</span> same <span class="property">day</span> <span class="keyword">and</span> this will I do, henceforth.
</code></pre><h3 id="<strong>I_will_laugh_at_the_world-</strong>-1"><strong>I will laugh at the world.</strong></h3>
<pre><code>And <span class="keyword">with</span> <span class="keyword">my</span> laughter all things will be reduced <span class="keyword">to</span> their proper size. 
I will laugh <span class="keyword">at</span> <span class="keyword">my</span> failures <span class="keyword">and</span> they will vanish <span class="keyword">in</span> clouds <span class="keyword">of</span> new dreams.
I will laugh <span class="keyword">at</span> <span class="keyword">my</span> successes <span class="keyword">and</span> they will shrink <span class="keyword">to</span> their <span class="constant">true</span> value.  
I will laugh <span class="keyword">at</span> evil <span class="keyword">and</span> <span class="keyword">it</span> will die untasted; I will laugh <span class="keyword">at</span> goodness <span class="keyword">and</span> <span class="keyword">it</span> will thrive <span class="keyword">and</span> abound. 
Each <span class="property">day</span> will be triumphant only when <span class="keyword">my</span> smiles bring forth smiles <span class="keyword">from</span> others <span class="keyword">and</span> this I do <span class="keyword">in</span> selfishness, 
<span class="keyword">for</span> those <span class="function_start"><span class="keyword">on</span></span> whom I frown are those who purchase <span class="keyword">not</span> <span class="keyword">my</span> goods.
</code></pre><h3 id="<strong>I_will_laugh_at_the_world-</strong>-1"><strong>I will laugh at the world.</strong></h3>
<pre><code>Henceforth will I shed only tears <span class="keyword">of</span> sweat, 
<span class="keyword">for</span> those <span class="keyword">of</span> sadness <span class="keyword">or</span> remorse <span class="keyword">or</span> frustration are <span class="keyword">of</span> no value <span class="keyword">in</span> <span class="keyword">the</span> marketplace whilst each smile can be exchanged <span class="keyword">for</span> gold <span class="keyword">and</span> each kind <span class="property">word</span>,
spoken <span class="keyword">from</span> <span class="keyword">my</span> heart, can build a castle.

Never will I allow myself <span class="keyword">to</span> become so important, so wise, so dignified, so powerful, 
<span class="keyword">that</span> I forget how <span class="keyword">to</span> laugh <span class="keyword">at</span> myself <span class="keyword">and</span> <span class="keyword">my</span> world. 
In this matter I will always remain <span class="keyword">as</span> a child, <span class="keyword">for</span> only <span class="keyword">as</span> a child am I <span class="keyword">given</span> <span class="keyword">the</span> ability <span class="keyword">to</span> look up <span class="keyword">to</span> others;
<span class="keyword">and</span> so long <span class="keyword">as</span> I look up <span class="keyword">to</span> another I will never grow too long <span class="keyword">for</span> <span class="keyword">my</span> cot.
</code></pre><h3 id="<strong>I_will_laugh_at_the_world-</strong>-1"><strong>I will laugh at the world.</strong></h3>
<pre><code>And so long <span class="keyword">as</span> I can laugh never will I be poor.  
This <span class="keyword">then</span>, <span class="keyword">is</span> one <span class="keyword">of</span> nature’s greatest gifts, <span class="keyword">and</span> I will waste <span class="keyword">it</span> no more.
Only <span class="keyword">with</span> laughter <span class="keyword">and</span> happiness can I truly become a success.  
Only <span class="keyword">with</span> laughter <span class="keyword">and</span> happiness can I enjoy <span class="keyword">the</span> fruits <span class="keyword">of</span> <span class="keyword">my</span> labor.
Were <span class="keyword">it</span> <span class="keyword">not</span> so, far better would <span class="keyword">it</span> be <span class="keyword">to</span> fail, <span class="keyword">for</span> happiness <span class="keyword">is</span> <span class="keyword">the</span> wine <span class="keyword">that</span> sharpens <span class="keyword">the</span> taste <span class="keyword">of</span> <span class="keyword">the</span> meal. 
To enjoy success I must have happiness, <span class="keyword">and</span> laughter will be <span class="keyword">the</span> maiden who serves <span class="keyword">me</span>.
I will be happy.
I will be successful.
I will be <span class="keyword">the</span> greatest salesman <span class="keyword">the</span> world has ever known.
</code></pre>]]></content>
    <summary type="html"><![CDATA[<h3 id="当你生活不如意时,当你工作不顺心时,当你遇到烦心事时……-">当你生活不如意时,当你工作不顺心时,当你遇到烦心事时…….</h3>
<h3 id="请仔细阅读以下文字,也许可以帮助你走出困境-<!-more->">请仔细阅读以下文字,也许可以帮助你走出困境.]]></summary>
    
      <category term="life" scheme="http://loveliuli.com/tags/life/"/>
    
      <category term="生活" scheme="http://loveliuli.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[puppet介绍]]></title>
    <link href="http://loveliuli.com/2013/11/11/tools/tool_01_puppet_introduce/"/>
    <id>http://loveliuli.com/2013/11/11/tools/tool_01_puppet_introduce/</id>
    <published>2013-11-11T14:35:44.000Z</published>
    <updated>2014-05-23T10:29:56.000Z</updated>
    <content type="html"><![CDATA[<p>本文档目标是描述Puppet的 manifest在系统上是如何工作。此过程相当复杂，但是一般也不需要了解其中太多的细节。整理此文档也正是为了那些想了解更多关于Puppet内部机制人更方便更直接理解。<a id="more"></a></p>
<p>在介绍之前，我们先看两个关于Puppet的经典图。一方面希望这两幅图能帮助理解，另一方面也希望下面的解释能帮助理解这两幅图。<br>Puppet架构图</p>
<p><img src="http://ww3.sinaimg.cn/large/b7ec873bgw1ednlygdpeuj209p04vjrk.jpg" alt="Puppet架构图"><br>Puppet工作流程图<br><img src="http://ww3.sinaimg.cn/large/b7ec873bgw1ednm9apav3j20j90a7dh8.jpg" alt="Puppet工作流程图"></p>
<h1 id="High_Level">High Level</h1>
<p>粗略来看，Puppet有三个主要的执行阶段—编译、实例化和配置</p>
<h1 id="编译">编译</h1>
<p>这阶段描述如何将一个基于文本的manifest转变为一个针对特定节点规范(node-specific specification)。任何与此主机无关的代码都会被忽略，而任何与此主机相关的代码都会被插入，意味着变量扩展并且所有的结果都是文字字符串。</p>
<p>编译阶段与Puppet库资源类型的唯一联系就是所有作为结果的资源规范都会被验证：也就是验证指定的类型是有效的并且该类型所有特定属性都是有效的。这时候没有对属性值的验证。</p>
<p>在网络安装环境中，这阶段完全发生在服务端。此阶段的输出是一个类似于哈希的简单资源集合。</p>
<h1 id="实例化">实例化</h1>
<p>这阶段将简单的哈希和数组(编译阶段的输出)转变为Puppet库对象。因为这阶段需要依赖客户端的很多信息才能正常工作（比如，使用什么类型的包，什么类型的服务等），这阶段完全发生在客户端。</p>
<p>从简单的格式转换为文字的Puppet对象允许这些对象对输入做更强大的验证，这是大部分输入验证发生的地方。如果你指定有效的属性但却赋予无效的值，在这里你可以发现它。意味着你将在客户端实例化配置时验证这类值错误，而不是在服务端。</p>
<p>这阶段的输出是全部的机器配置，而它能够改变本地系统。</p>
<h1 id="配置">配置</h1>
<p>这阶段Puppet真正改变系统。每个资源实例比较自身特定状态与机器状态并且去做任何需要更改的变动。如果机器状态恰好与指定状态一致，则不需要做任何变动。</p>
<h1 id="Lower_Level">Lower Level</h1>
<p>上述三个阶段每个都可以分解为更多步骤。</p>
<h1 id="编译阶段1：解析">编译阶段1：解析</h1>
<p>输入：使用Puppet语言编写的Manifests</p>
<p>输出：解析树(AST对象实例)</p>
<p>入口：Puppet::Parser::Parser#parse</p>
<p>这时候，所有Puppet manifests开始为文本文件，解析器的工作就是理解这些文件。解析器只做了很少的工作-它将文本转换为一种文本直接映射回文本的格式，创建解析树本质上等价于（创建）文本自身。这时的验证仅仅是语法的验证。</p>
<p>这阶段无论是否使用节点，无论使用stand-alone Puppet解释器或者客户端/服务端系统。一旦启动Puppet，解析过程就会发生。</p>
<h1 id="编译阶段2：解释">编译阶段2：解释</h1>
<p>输入：解析树(AST对象实例)和客户端信息（由Facter收集的facts）</p>
<p>输出：Trees of TransObject and TransBucket instances</p>
<p>入口：Puppet::Parser::AST#evaluate</p>
<p>出口：Puppet::Parser::Scope#to_trans</p>
<p>许多配置需要依赖客户端信息来决定。当Puppet客户端开始运行，它会加载Facter库，收集所有能够收集的facts,并且将这些facts传给解释器。当你通过网络使用Puppet，这些facts会经过网络传输到服务端，然后服务端会利用这些信息来编译客户端配置。</p>
<p>这阶段传递给服务端的信息(像操作系统和硬件体系结构等)，既让服务端能够对客户端配置做出决定，同时它也能让服务端向配置中插入客户端信息，像IP地址和MAC地址这些信息。</p>
<p>解释器将解析树和客户端信息合并为一个简单可传输对象树。这个可传输对象映射manifeasts定义的配置，它仍是一个树，但是它是一个类树，而资源包含在这些类中。</p>
<h1 id="节点和无节点">节点和无节点</h1>
<p>当你使用Puppet时，有选项选择是否使用节点资源。如果不使用节点资源，每次一个客户端连接都需要解释整个配置，自顶向下解释解析树。在这种情况下，你必须有某种明确的选择机制来指定哪个代码适用哪个节点。</p>
<p>如果你使用节点资源，那么，解释器就会预编译所有与特定节点无关的代码。当一个节点连接时，解释器就会寻找此节点名（从Facter facts中检索）相关的代码然后仅仅编译这些相关代码。</p>
<h1 id="配置传输">配置传输</h1>
<p>输入：可传输对象</p>
<p>输出：可传输对象</p>
<p>入口：Puppet::Network::Server::Master#getconfig</p>
<p>出口：Puppet::Network::Client::Master#getconfig</p>
<p>如果使用stand-alone Puppet，那么就没有配置传输，因为客户端和服务端是同一进程。如果使用基于网络的Puppetd客户端和Puppetmasterd服务端，那么这些配置一旦编译完毕，就必须发送到客户端。</p>
<p>Puppet目前是将这些可传输对象转变为YAML，它经过CGI转义然后使用XMLRPC通过HTTPS发送。客户端接收配置，反转义，缓存到磁盘以免下次服务端不可用，然后使用YAML再将它转换为普通ruby可传输对象。</p>
<h1 id="实例化阶段">实例化阶段</h1>
<p>输入：可传输对象</p>
<p>输出： Puppet::Type instances</p>
<p>入口：Puppet::Network::Client::Master#run</p>
<p>出口：Puppet::Transaction#initialize</p>
<p>为了创建Puppet 库对象(Puppet::Type子类实例)，在可传输对象顶层调用to_trans。所有的容器对象转换为Puppet::Type::Component实例，所有普通对象转变为Puppet资源类型实例。</p>
<p>这是所有输入验证发生地而且经常在这里值转换为更可用形式。例如，文件系统始终返回用户IDs，而不是用户名，因此Puppet对象将它们适当转换。(顺便提及下，有时候Puppet会在对文件chown时创建用户，意味着只要有可能Puppet会忽略验证错误直到最后一刻)。</p>
<p>一旦所有资源建立在一个类似图的组件和资源树时，这个树转变为一个GRATR图像。然后这个图像传递给一个新的事务实例。</p>
<h1 id="配置阶段">配置阶段</h1>
<p>输入：GRATR图</p>
<p>输出：事物报告</p>
<p>入口：Puppet::Transaction#evaluate</p>
<p>出口：Puppet::Transaction#generate_report</p>
<p>在这个阶段，所有工作的完成，由一个事务控制。</p>
<h1 id="资源生成">资源生成</h1>
<p>一些资源管理其他资源实例，例如递归文件操作。在这个阶段，任何静态生成的资源都被生成。然后这些生成的资源被添加到资源图。</p>
<h1 id="关系">关系</h1>
<p>配置进程的下一阶段创建一个图来为资源依赖建模。Puppet语言的目标之一就是使文件顺序问题尽可能少；这意味着一个需要依赖其他资源的Puppet资源在manifest中会被列在它依赖的资源之后，也就是说被依赖的资源将会在它依赖的资源之后被实例化。最后依赖关系图会和原始资源图进行合并来创建一个完整的有着所有资源和所有关系的图。</p>
<h1 id="评估">评估</h1>
<p>配置事务会对最终关系图做一个拓扑排序并且遍历结果列表，按顺序评价每个资源。每个资源的每个非同步属性都会生成一个Puppet::StateChange对象。事务使用该对象严格控制这些资源需要做哪些改变和在什么时候改变，当然也会确保提供日志。</p>
<p>报告 随着事务的进行，它会收集日志和度量指标。在评估的最后，将这些信息转变为报告，发送给服务端。</p>
<h1 id="总结">总结</h1>
<p>这是Puppet Manifest转变为一个完整配置的完整流程。对于Puppet系统，还有更多，例如FileBuckets，但是这些更多是支持角色而不是主要魅力所在。</p>
]]></content>
    <summary type="html"><![CDATA[<p>本文档目标是描述Puppet的 manifest在系统上是如何工作。此过程相当复杂，但是一般也不需要了解其中太多的细节。整理此文档也正是为了那些想了解更多关于Puppet内部机制人更方便更直接理解。]]></summary>
    
      <category term="puppet" scheme="http://loveliuli.com/tags/puppet/"/>
    
      <category term="工具" scheme="http://loveliuli.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
</feed>
